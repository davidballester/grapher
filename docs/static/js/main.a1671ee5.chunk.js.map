{"version":3,"sources":["scenes/graph/scenes/onboarding/components/assets/onboarding-introduction.png","scenes/graph/scenes/onboarding/components/assets/onboarding-add-nodes-and-links.png","scenes/graph/scenes/onboarding/components/assets/onboarding-groups.png","scenes/graph/scenes/onboarding/components/assets/onboarding-text-editor.png","services/graph-names.service.js","ducks/graph/graph.actions.js","ducks/graph/graph.reducer.js","services/graph.service.js","ducks/graph/graph.selectors.js","ducks/graph/graph.sagas.js","scenes/graph-list/graph-list.duck.js","constants.js","scenes/graph/scenes/selection/scenes/nodes/node-selection.duck.js","scenes/graph/scenes/selection/scenes/links/link-selection.duck.js","services/history.service.js","scenes/graph-import/graph-import.duck.js","ducks/navigation.duck.js","ducks/dialog.duck.js","components/canvas/canvas.duck.js","services/graph-grammar.js","ducks/subgraph-creator.duck.js","scenes/graph/scenes/onboarding/onboarding.service.js","scenes/graph/scenes/onboarding/onboarding.duck.js","store.js","components/navbar/components/back-button.component.js","components/navbar/navbar.component.js","scenes/new-graph/new-graph.container.js","scenes/new-graph/new-graph.component.js","components/canvas/services/node-renderer.service.js","components/canvas/services/link-renderer.service.js","components/canvas/canvas.component.js","components/canvas/canvas.container.js","scenes/graph/scenes/confirm-deletes/scenes/node/confirm-delete-node.component.js","scenes/graph/scenes/confirm-deletes/scenes/node/confirm-delete-node.container.js","scenes/graph/scenes/confirm-deletes/scenes/link/confirm-delete-link.component.js","scenes/graph/scenes/confirm-deletes/scenes/link/confirm-delete-link.container.js","scenes/graph/scenes/confirm-deletes/scenes/graph/confirm-delete-graph.component.js","scenes/graph/scenes/confirm-deletes/scenes/graph/confirm-delete-graph.container.js","scenes/graph/scenes/confirm-deletes/confirm-deletes.component.js","scenes/graph/scenes/selection/scenes/nodes/components/selected-node.component.js","scenes/graph/scenes/selection/scenes/nodes/selected-nodes.component.js","scenes/graph/scenes/selection/scenes/nodes/selected-nodes.container.js","scenes/graph/scenes/selection/scenes/links/selected-link.component.js","scenes/graph/scenes/selection/scenes/links/selected-link.container.js","scenes/graph/scenes/selection/selected-items.component.js","scenes/graph/scenes/actions/speed-dials.component.js","scenes/graph/scenes/actions/speed-dials.container.js","scenes/graph/scenes/actions/components/groups-select.component.js","scenes/graph/scenes/actions/scenes/new-node/new-node.component.js","scenes/graph/scenes/actions/scenes/new-node/new-node.container.js","components/select-searcher.component.js","scenes/graph/scenes/actions/scenes/new-link/new-link.component.js","scenes/graph/scenes/actions/scenes/new-link/new-link.container.js","components/toggle-color-picker.component.js","scenes/graph/scenes/actions/scenes/edit-node/edit-node.component.js","scenes/graph/scenes/actions/scenes/edit-node/edit-node.container.js","scenes/graph/scenes/actions/scenes/edit-link/edit-link.component.js","scenes/graph/scenes/actions/scenes/edit-link/edit-link.container.js","scenes/graph/scenes/actions/actions.component.js","scenes/graph/components/actions-menu.component.js","scenes/graph/components/actions-menu.container.js","scenes/graph/scenes/edit-graph/edit-graph.component.js","scenes/graph/scenes/edit-graph/edit-graph.container.js","scenes/graph/scenes/export/components/download-button.component.js","scenes/graph/scenes/export/export.component.js","scenes/graph/scenes/export/export.container.js","scenes/graph/scenes/groups/components/empty-state.component.js","scenes/graph/scenes/groups/components/group-edit.component.js","scenes/graph/scenes/groups/components/color-box.component.js","scenes/graph/scenes/groups/components/group-list-item.component.js","scenes/graph/scenes/groups/components/add-group-list-item.component.js","scenes/graph/scenes/groups/components/confirm-delete.component.js","scenes/graph/scenes/groups/groups.component.js","scenes/graph/scenes/groups/groups.container.js","scenes/graph/scenes/text-editor/text-editor.component.js","scenes/graph/scenes/text-editor/text-editor.container.js","scenes/graph/scenes/onboarding/components/introduction.component.js","scenes/graph/scenes/onboarding/components/add-nodes-and-links.component.js","scenes/graph/scenes/onboarding/components/groups.component.js","scenes/graph/scenes/onboarding/components/text-editor.component.js","scenes/graph/scenes/onboarding/components/title.component.js","scenes/graph/scenes/onboarding/onboarding.component.js","scenes/graph/scenes/onboarding/onboarding.container.js","scenes/graph/graph.component.js","scenes/graph/graph.container.js","scenes/graph-list/graph-list.component.js","scenes/graph-list/graph-list.container.js","scenes/graph-import/graph-import.component.js","scenes/graph-import/graph-import.container.js","app.component.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","graph_names_service","rawGraphNames","localStorage","getItem","JSON","parse","id","name","graphNames","this","getGraphNames","newGraphNames","Object","objectSpread","defineProperty","saveGraphNames","setItem","stringify","GRAPH_SET_NAME","GRAPH_CREATE","GRAPH_LOAD","GRAPH_LOAD_SUCCESS","GRAPH_CREATE_NODE","GRAPH_CREATE_LINK","GRAPH_DELETE_NODE","GRAPH_DELETE_LINK","GRAPH_EDIT_NODE","GRAPH_DELETE","GRAPH_EDIT_LINK","GRAPH_IMPORT_SUBGRAPH","GRAPH_GROUPS_ADD","GRAPH_GROUPS_REMOVE","GRAPH_GROUPS_UPDATE","createGraph","graph","type","payload","uuid","loadGraph","loadGraphSuccess","createLink","link","importSubgraph","nodes","arguments","length","undefined","links","groups","addGroup","group","removeGroup","groupId","updateGroup","initialState","kingarthur","sirgalahad","sirlancelot","sirlamorak","sirbors","ladyguinevere","merlin","sirmordred","kingarthur-sirmordred","label","source","target","kingarthur-ladyguinevere","kingarthur-merlin","sirlancelot-kingarthur","sirlancelot-sirgalahad","sirlancelot-ladyguinevere","sirlancelot-sirbors","sirgalahad-sirlamorak","graph_service","GraphService","classCallCheck","createClass","key","value","graphStorageKey","getGraphStorageKey","removeItem","serializedGraph","error","errors","validationResult","validate","graphJsonSchema","valid","map","stack","replace","graphSelector","state","getId","getName","getNodes","getLinks","getNodesAsArray","createSelector","values","getLinksAsArray","getNodesIds","keys","getLinksWithOpposite","filter","_ref","find","_ref2","candidateSource","candidateTarget","getOppositeLink","getLinksIdsWithOpposite","getSerializedGraph","graphService","serializeGraph","getGroups","getGroupsAsArray","saveGraph","saveGraphSaga","doLoadGraph","loadGraphSaga","doDeleteGraph","deleteGraphSaga","regenerator_default","a","wrap","_context","prev","next","select","sent","call","graphNamesService","stop","_marked","_context2","takeLatest","_marked2","action","graphId","_context3","put","_marked3","_context4","_marked4","_context5","_marked5","_context6","_marked6","getGraphNamesAsArray","graphList","entries","MAX_SELECTED_NODES","ROUTES","BASE","GRAPHS","NEW_GRAPH","GRAPH","IMPORT_GRAPH","NODE_SELECTION_SELECT","NODE_SELECTION_DESELECT","selectedNodes","selectNode","node","deselectNode","nodeId","getSelectedNodes","nodeSelection","nodeSelectionSelector","getNonExistentLinkBetweenSelectedNodes","_selectedNodes$map","n","_selectedNodes$map2","slicedToArray","ls","lt","LINK_SELECTION_SELECT","LINK_SELECTION_DESELECT","selectedLink","selectLink","deselectLink","getSelectedLink","linkSelection","linkSelectionSelector","createBrowserHistory","doImportGraph","importGraphSaga","GRAPH_IMPORT","GRAPH_IMPORT_SUCCESS","GRAPH_IMPORT_FAILURE","importGraph","importGraphSuccess","importGraphFailure","getErrors","graphImport","graphImportState","graph_import_duck_marked","graph_import_duck_marked2","navigate","navigateSaga","GRAPH_IMPORT_OPEN","NEW_GRAPH_OPEN","GRAPH_OPEN","GRAPH_LIST_OPEN","openImportGraph","openNewGraph","openGraph","openGraphList","t0","history","abrupt","concat","navigation_duck_marked","navigation_duck_marked2","DIALOG_IDS","EDIT_GRAPH","EDIT_LINK","EDIT_NODE","NEW_NODE","NEW_LINK","CONFIRM_DELETE_GRAPH","CONFIRM_DELETE_LINK","CONFIRM_DELETE_NODE","EXPORT_GRAPH","DIALOG_OPEN","DIALOG_CLOSE","openDialog","dialogId","metadata","closeDialog","getDialogData","dialog","dialogSelector","getIsOpen","dialogData","isOpen","getMetadata","doRefresh","refreshSaga","CANVAS_REGISTER_CANVAS_COMPONENT","CANVAS_REFRESH","canvasComponent","registerCanvasComponent","getCanvasComponent","canvas","canvas_duck_marked","canvas_duck_marked2","mapGroup","mapNode","_omitBy","_isNil","graphGrammar","grammar","ohm","semantics","createSemantics","addOperation","path_partials","partialPaths","entities","_flattenDeep","toConsumableArray","eval","nodesAndLinks","entity","index","_ref3","_ref5","_ref6","direction","item","findIndex","candidate","path_nodes","_ref7","_ref8","partialPath","node_nodeNoGroups","open","identifier","close","node_nodeGroups","groupsArray","link_forwardWithLabel","link_backwardWithLabel","link_forwardGroups","link_backwardGroups","link_forward","chars","link_backward","groups_singleGroup","colon","groups_multipleGroups","identifier_string","sourceString","identifier_withBlanks","firstIdentifier","space","secondIdentifier","string","match","matchResult","initialize","subgraphProcess","subgraphProcessSaga","doImportSubgraph","importSubgraphSaga","SUBGRAPH_PROCESS","SUBGRAPH_PROCESS_SUCCESS","SUBGRAPH_PROCESS_FAILURE","SUBGRAPH_IMPORT","processing","processSubgraph","subgraphString","processSubgraphSuccess","subgraph","subgraphCreatorSelector","subgraphCreator","getError","getProcessing","delay","succeeded","subgraph_creator_duck_marked","subgraph_creator_duck_marked2","graphImportSubgraph","subgraph_creator_duck_marked3","subgraph_creator_duck_marked4","markAsDismissed","doPersistDismiss","persistDismiss","ONBOARDING_DISMISS","dismissOnboarding","showOnboarding","onboarding","onboardingState","onboarding_duck_marked","onboarding_duck_marked2","sagaMiddleware","createSagaMiddleware","reducer","combineReducers","_action$payload","newState","_action$payload2","linkId","reduce","newLinks","oldId","groupsAsObject","existingGroup","obj","nodesAsObject","existingNode","nodeGroups","linksAsObject","existingLink","linkGroups","_ref4","newGroups","ng","nodesMap","lg","linksMap","groupIndex","splice","slice","editedNode","selectedLinkId","selectedLinkSource","selectedLinkTarget","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","withStyles","theme","root","marginLeft","spacing","marginRight","withTheme","onBack","classes","className","props","objectWithoutProperties","react_default","createElement","IconButton","assign","color","clsx","onClick","ArrowBack_default","title","flexGrow","children","Fragment","AppBar","Toolbar","back_button_component","Typography","variant","connect","dispatch","saveNewGraph","graphName","cancelNewGraph","_useState","useState","_useState2","newGraphName","setNewGraphName","_useState3","_useState4","setError","navbar_component","Dialog","DialogTitle","onSubmit","event","preventDefault","trim","isGraphNameValid","submit","DialogContent","TextField","onChange","Button","renderNode","ctx","globalScale","selected","orange","blue","strokeStyle","fillStyle","beginPath","arc","x","y","Math","PI","fill","renderSelectedCircle","nodeColor","groupColor","_get","getNodeColor","renderCircle","fontSize","font","textAlign","textBaseline","fillText","renderLabel","getLinkColor","_link$virtual","virtual","_link$selected","_link$artificial","artificial","grey","updateDimensions","setDimensions","containerRef","headerHeight","innerWidth","width","current","clientWidth","height","innerHeight","getNodeDegree","virtualLink","linksIdsWithOpposite","bindActionCreators","openNewNode","openEditNode","openConfirmDeleteLink","openConfirmDeleteNode","nodeIds","_ref$nodes","_ref$selectedNodes","_ref$links","forceGraphRef","useRef","useEffect","dimensions","resize","addEventListener","removeEventListener","zoom","setZoom","newZoom","_useState5","_useState6","linksGraphData","setLinksGraphData","currentLinksGraphData","newLinksGraphData","linkGraphData","original","lastNodeWithSomeDegree","reverse","Array","_useState7","_useState8","nodesGraphData","setNodesGraphData","currentNodesGraphData","nodeGraphData","degree","onDoubleClick","tabIndex","onKeyUp","ref","react_force_graph_2d_module","graphData","enableNodeDrag","nodeCanvasObject","nodeLabel","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkColor","linkWidth","linkDirectionalParticles","linkDirectionalParticleWidth","linkLabel","linkCurvature","onNodeClick","actualNode","onLinkClick","originalLink","ConfirmDeleteNode","_ref$nodeIds","deleteNodes","cancel","nodesLabel","theseLabel","ListItem","ListItemText","primary","DialogContentText","List","forEach","deleteNode","ConfirmDeleteLink","deleteLink","getLinkById","ConfirmDeleteGraph","deleteGraph","ConfirmDeletes","confirm_delete_node_container","confirm_delete_link_container","confirm_delete_graph_container","chip","badges","Chip","size","Card","CardContent","gutterBottom","component","CardActions","StyledSelectedNode","styled","SelectedNode","_templateObject","SelectedNodes","openEditLink","SelectedLink","marginBottom","_ref$classes","selected_link_container","selected_nodes_container","SpeedDials","openNewLink","refresh","setOpen","SpeedDial","ariaLabel","icon","SpeedDialIcon","onClose","onFocus","onBlur","onMouseEnter","onMouseLeave","SpeedDialAction","Brightness1_default","tooltipTitle","tooltipOpen","ArrowRightAlt_default","Refresh_default","useStyles","makeStyles","selectFormControl","display","chips","flexWrap","margin","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","GroupsSelect","selectedGroups","openSelect","setOpenSelect","FormControl","InputLabel","htmlFor","Select","multiple","onOpen","input","Input","renderValue","inputProps","MenuItem","initialValues","NodeSchema","Yup","shape","required","saveNewNode","createNode","cancelNewNode","_ref$groups","formik_esm","validationSchema","render","setFieldValue","inputComponent","inputRef","components","Control","fullWidth","InputProps","selectProps","innerRef","innerProps","textFieldProps","Menu","Paper","square","paper","MultiValue","classNames","chipFocused","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","noOptionsMessage","Option","buttonRef","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","marginTop","padding","flex","alignItems","overflow","backgroundColor","emphasize","palette","position","left","zIndex","right","divider","react_select_esm","styles","base","& input","InputLabelProps","shrink","StyledTextField","NewLink","nodesIds","saveNewLink","cancelNewLink","LinkSchema","select_searcher_component","options","ToggleColorPicker","colors","displayColorPicker","setDisplayColorPicker","react_color_lib","hex","edit_node_component_templateObject","red","purple","green","yellow","brown","EditNode","_ref$node","_ref$nodesIds","editNode","cancelEditNode","nodeGroup","notOneOf","toggle_color_picker_component","edit_link_component_templateObject","EditLink","_ref$link","editLink","cancelEditLink","linkGroup","Actions","speed_dials_container","new_node_container","new_link_container","edit_node_container","edit_link_container","moreButton","openEditGraph","openConfirmDeleteGraph","openExport","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","handleClose","currentTarget","MoreVert_default","Menu_Menu","ListItemIcon","Edit_default","GetApp_default","Delete_default","HelpOutline_default","ActionsMenu","EditGraph","setGraphName","cancelEditGraph","GraphSchema","DownloadButton","fileName","content","element","document","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","Export","react_ace_lib_default","mode","showPrintMargin","showGutter","highlightActiveLine","focus","readOnly","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","download_button_component","figure","callToAction","DeviceHub_default","GroupSchema","GroupEdit","_ref$group","save","borderRadius","_ref$color","GroupListItemComponent","onEdit","color_box_component","ListItemSecondaryAction","edge","AddGroupListItem","button","AddCircleOutline_default","ConfirmDelete","_ref$open","groupName","confirm","&.Mui-expanded","list","expanded","setExpanded","groupEdit","setGroupEdit","confirmDelete","setConfirmDelete","listItems","emptyState","empty_state_component","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","Groups","container","form","&:hover,&:focus,&:active","fade","light","fieldUnderline","&:before,&:after","borderBottom","send","_ref$error","_ref$processing","resetForm","setSubmitting","handleChange","Box","underline","disabled","Send_default","TextEditor","img","maxWidth","hidden","src","onboardingIntroduction","alt","image","closeButton","top","disableTypography","aria-label","Close_default","stepper","step","dismiss","activeStep","setActiveStep","title_component","introduction_component","add_nodes_and_links_component","components_groups_component","components_text_editor_component","MobileStepper","steps","nextButton","prevActiveStep","KeyboardArrowRight_default","backButton","KeyboardArrowLeft_default","Onboarding","grid","pointerEvents","leftPanel","leftPanelContent","rightPanel","& > *","selectedItems","textEditor","bottom","loadedGraphId","actions_menu_container","confirm_deletes_component","edit_graph_container","export_container","onboarding_container","canvas_container","Grid","xs","selected_items_component","groups_container","justifyContent","actions_component","text_editor_container","withRouter","ownProps","params","Graph","GraphList","addGraph","ListItemAvatar","Avatar","Add_default","Input_default","listItem","paddingLeft","listItemText","main","_ref$errors","setSerializedGraph","errorsListItems","dense","index_es","files","file","fileReader","FileReader","onload","result","readAsText","handleFileUpload","dropZoneClass","dropzoneParagraphClass","dropzoneText","acceptedFiles","filesLimit","showPreviewsInDropzone","showAlerts","Import","App","_Component","possibleConstructorReturn","getPrototypeOf","apply","inherits","react_router","path","exact","graph_list_container","graph_import_container","new_graph_container","graph_container","Component","Boolean","location","hostname","ReactDOM","es","CssBaseline","app_component_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1671ee5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/onboarding-introduction.63f30b76.png\";","module.exports = __webpack_public_path__ + \"static/media/onboarding-add-nodes-and-links.914f6f6c.png\";","module.exports = __webpack_public_path__ + \"static/media/onboarding-groups.68c8615e.png\";","module.exports = __webpack_public_path__ + \"static/media/onboarding-text-editor.0e6bebf0.png\";","export const GRAPHS_NAMES_STORAGE_KEY = 'grapher/services/graphs-service';\n\nclass GraphNamesService {\n  getGraphNames() {\n    const rawGraphNames = localStorage.getItem(GRAPHS_NAMES_STORAGE_KEY);\n    return !!rawGraphNames ? JSON.parse(rawGraphNames) : {};\n  }\n\n  saveGraphName(id, name) {\n    const graphNames = this.getGraphNames();\n    const newGraphNames = { ...graphNames, [id]: name };\n    this.saveGraphNames(newGraphNames);\n  }\n\n  removeGraphName(id) {\n    const graphNames = this.getGraphNames();\n    delete graphNames[id];\n    this.saveGraphNames(graphNames);\n  }\n\n  saveGraphNames(graphNames) {\n    localStorage.setItem(GRAPHS_NAMES_STORAGE_KEY, JSON.stringify(graphNames));\n  }\n}\n\nexport default new GraphNamesService();\n","import uuid from 'uuid/v4';\n\nexport const GRAPH_SET_NAME = 'grapher/Graph/SET_NAME';\nexport const GRAPH_CREATE = 'grapher/Graph/CREATE';\nexport const GRAPH_LOAD = 'grapher/Graph/LOAD';\nexport const GRAPH_LOAD_SUCCESS = 'grapher/Graph/LOAD_SUCCESS';\nexport const GRAPH_CREATE_NODE = 'grapher/Graph/CREATE_NODE';\nexport const GRAPH_CREATE_LINK = 'grapher/Graph/CREATE_LINK';\nexport const GRAPH_DELETE_NODE = 'grapher/Graph/DELETE_NODE';\nexport const GRAPH_DELETE_LINK = 'grapher/Graph/DELETE_LINK';\nexport const GRAPH_EDIT_NODE = 'grapher/Graph/EDIT_NODE';\nexport const GRAPH_DELETE = 'grapher/Graph/DELETE';\nexport const GRAPH_EDIT_LINK = 'grapher/Graph/EDIT_LINK';\nexport const GRAPH_IMPORT_SUBGRAPH = 'grapher/Graph/IMPORT_SUBGRAPH';\nexport const GRAPH_GROUPS_ADD = 'grapher/Graph/ADD';\nexport const GRAPH_GROUPS_REMOVE = 'grapher/Graph/REMOVE';\nexport const GRAPH_GROUPS_UPDATE = 'grapher/Graph/UPDATE';\n\nexport function setGraphName(id, name) {\n  return {\n    type: GRAPH_SET_NAME,\n    payload: {\n      id,\n      name,\n    },\n  };\n}\n\nexport function createGraph(graph) {\n  return {\n    type: GRAPH_CREATE,\n    payload: {\n      ...graph,\n      id: uuid(),\n    },\n  };\n}\n\nexport function loadGraph(id) {\n  return {\n    type: GRAPH_LOAD,\n    payload: id,\n  };\n}\n\nexport function loadGraphSuccess(graph) {\n  return {\n    type: GRAPH_LOAD_SUCCESS,\n    payload: graph,\n  };\n}\n\nexport function createNode(node) {\n  return {\n    type: GRAPH_CREATE_NODE,\n    payload: {\n      ...node,\n    },\n  };\n}\n\nexport function createLink(link) {\n  return {\n    type: GRAPH_CREATE_LINK,\n    payload: link,\n  };\n}\n\nexport function deleteNode(nodeId) {\n  return {\n    type: GRAPH_DELETE_NODE,\n    payload: nodeId,\n  };\n}\n\nexport function deleteLink(linkId) {\n  return {\n    type: GRAPH_DELETE_LINK,\n    payload: linkId,\n  };\n}\n\nexport function deleteGraph(id) {\n  return {\n    type: GRAPH_DELETE,\n    payload: id,\n  };\n}\n\nexport function editNode(oldId, node) {\n  return {\n    type: GRAPH_EDIT_NODE,\n    payload: {\n      oldId,\n      node,\n    },\n  };\n}\n\nexport function editLink(link) {\n  return {\n    type: GRAPH_EDIT_LINK,\n    payload: link,\n  };\n}\n\nexport function importSubgraph(nodes = [], links = [], groups = []) {\n  return {\n    type: GRAPH_IMPORT_SUBGRAPH,\n    payload: {\n      nodes,\n      links,\n      groups,\n    },\n  };\n}\n\nexport function addGroup(group) {\n  return {\n    type: GRAPH_GROUPS_ADD,\n    payload: {\n      id: uuid(),\n      ...group,\n    },\n  };\n}\n\nexport function removeGroup(groupId) {\n  return {\n    type: GRAPH_GROUPS_REMOVE,\n    payload: groupId,\n  };\n}\n\nexport function updateGroup(group) {\n  return {\n    type: GRAPH_GROUPS_UPDATE,\n    payload: group,\n  };\n}\n","import uuid from 'uuid/v4';\n\nimport {\n  GRAPH_SET_NAME,\n  GRAPH_CREATE,\n  GRAPH_LOAD_SUCCESS,\n  GRAPH_CREATE_NODE,\n  GRAPH_CREATE_LINK,\n  GRAPH_DELETE_NODE,\n  GRAPH_DELETE_LINK,\n  GRAPH_EDIT_NODE,\n  GRAPH_EDIT_LINK,\n  GRAPH_IMPORT_SUBGRAPH,\n  GRAPH_GROUPS_ADD,\n  GRAPH_GROUPS_UPDATE,\n  GRAPH_GROUPS_REMOVE,\n} from './graph.actions';\n\nconst initialState = {\n  id: '',\n  name: '',\n  nodes: {\n    kingarthur: { id: 'kingarthur' },\n    sirgalahad: { id: 'sirgalahad' },\n    sirlancelot: { id: 'sirlancelot' },\n    sirlamorak: { id: 'sirlamorak' },\n    sirbors: { id: 'sirbors' },\n    ladyguinevere: { id: 'ladyguinevere' },\n    merlin: { id: 'merlin' },\n    sirmordred: { id: 'sirmordred' },\n  },\n  links: {\n    'kingarthur-sirmordred': {\n      id: 'kingarthur-sirmordred',\n      label: 'fathers',\n      source: 'kingarthur',\n      target: 'sirmordred',\n    },\n    'kingarthur-ladyguinevere': {\n      id: 'kingarthur-ladyguinevere',\n      label: 'married to',\n      source: 'kingarthur',\n      target: 'ladyguinevere',\n    },\n    'kingarthur-merlin': {\n      id: 'kingarthur-merlin',\n      label: 'mentored by',\n      source: 'kingarthur',\n      target: 'merlin',\n    },\n    'sirlancelot-kingarthur': {\n      id: 'sirlancelot-kingarthur',\n      label: 'serves',\n      source: 'sirlancelot',\n      target: 'kingarthur',\n    },\n    'sirlancelot-sirgalahad': {\n      id: 'sirlancelot-sirgalahad',\n      label: 'fathers',\n      source: 'sirlancelot',\n      target: 'sirgalahad',\n    },\n    'sirlancelot-ladyguinevere': {\n      id: 'sirlancelot-ladyguinevere',\n      label: 'in a relationship with',\n      source: 'sirlancelot',\n      target: 'ladyguinevere',\n    },\n    'sirlancelot-sirbors': {\n      id: 'sirlancelot-sirbors',\n      label: 'cousin of',\n      source: 'sirlancelot',\n      target: 'sirbors',\n    },\n    'sirgalahad-sirlamorak': {\n      id: 'sirgalahad-sirlamorak',\n      label: 'friend of',\n      source: 'sirgalahad',\n      target: 'sirlamorak',\n    },\n  },\n  groups: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GRAPH_SET_NAME: {\n      const { name } = action.payload;\n      return {\n        ...state,\n        name,\n      };\n    }\n    case GRAPH_CREATE: {\n      const graph = action.payload;\n      return {\n        ...state,\n        name: '',\n        nodes: {},\n        links: {},\n        ...graph,\n      };\n    }\n    case GRAPH_LOAD_SUCCESS: {\n      return {\n        ...action.payload,\n      };\n    }\n    case GRAPH_CREATE_NODE: {\n      const node = action.payload;\n      return {\n        ...state,\n        nodes: {\n          ...state.nodes,\n          [node.id]: node,\n        },\n      };\n    }\n    case GRAPH_DELETE_NODE: {\n      const nodeId = action.payload;\n      const links = Object.keys(state.links)\n        .filter((linkId) => state.links[linkId].source !== nodeId && state.links[linkId].target !== nodeId)\n        .reduce((newLinks, linkId) => ({ ...newLinks, [linkId]: state.links[linkId] }), {});\n      const nodes = { ...state.nodes };\n      delete nodes[nodeId];\n      return {\n        ...state,\n        nodes,\n        links,\n      };\n    }\n    case GRAPH_CREATE_LINK: {\n      const link = action.payload;\n      const linkId = uuid();\n      return {\n        ...state,\n        links: {\n          ...state.links,\n          [linkId]: {\n            id: linkId,\n            label: `${link.source}-${link.target}`,\n            ...link,\n          },\n        },\n      };\n    }\n    case GRAPH_DELETE_LINK: {\n      const linkId = action.payload;\n      const links = { ...state.links };\n      delete links[linkId];\n      return {\n        ...state,\n        links,\n      };\n    }\n    case GRAPH_EDIT_NODE: {\n      const { oldId, node } = action.payload;\n      let nodes = { ...state.nodes };\n      delete nodes[oldId];\n      const links = Object.keys(state.links)\n        .map((linkId) => {\n          let link = state.links[linkId];\n          if (link.source === oldId) {\n            link = {\n              ...link,\n              source: node.id,\n            };\n          }\n          if (link.target === oldId) {\n            link = {\n              ...link,\n              target: node.id,\n            };\n          }\n          return link;\n        })\n        .reduce((newLinks, link) => ({ ...newLinks, [link.id]: link }), {});\n      return {\n        ...state,\n        nodes: { ...nodes, [node.id]: node },\n        links,\n      };\n    }\n    case GRAPH_EDIT_LINK: {\n      const link = action.payload;\n      return {\n        ...state,\n        links: {\n          ...state.links,\n          [link.id]: link,\n        },\n      };\n    }\n    case GRAPH_IMPORT_SUBGRAPH: {\n      const { nodes, links } = action.payload;\n      let { groups } = action.payload;\n\n      // Use existing groups for groups based on name\n      groups = groups.map((group) => {\n        const existingGroup = Object.values(state.groups).find(({ name }) => name === group.name);\n        return !!existingGroup ? existingGroup : group;\n      });\n\n      const groupsAsObject = groups.reduce(\n        (obj, group) => ({\n          ...obj,\n          [group.id]: group,\n        }),\n        {}\n      );\n      const nodesAsObject = nodes\n        .map((node) => {\n          const existingNode = state.nodes[node.id] || {};\n          // Use groups from the existing groups and merge them with current ones, if any\n          const nodeGroups = [\n            ...(existingNode.groups || []),\n            ...(node.groups || []).map((group) => groups.find(({ name }) => name === group.name)),\n          ].filter((item, index, groups) => groups.findIndex((candidate) => candidate.name === item.name) === index);\n          return {\n            ...existingNode,\n            ...node,\n            groups: nodeGroups,\n          };\n        })\n        .reduce(\n          (obj, node) => ({\n            ...obj,\n            [node.id]: node,\n          }),\n          {}\n        );\n      const linksAsObject = links\n        .map((link) => {\n          const existingLink = Object.values(state.links).find(({ source, target }) => source === link.source && target === link.target) || {};\n          // Use groups from the existing groups and merge them with current ones, if any\n          const linkGroups = [\n            ...(existingLink.groups || []),\n            ...(link.groups || []).map((group) => groups.find(({ name }) => name === group.name)),\n          ].filter((item, index, groups) => groups.findIndex((candidate) => candidate.name === item.name) === index);\n          return {\n            ...existingLink,\n            ...link,\n            groups: linkGroups,\n            id: existingLink.id || link.id,\n          };\n        })\n        .reduce(\n          (obj, link) => ({\n            ...obj,\n            [link.id]: link,\n          }),\n          {}\n        );\n\n      return {\n        ...state,\n        nodes: {\n          ...state.nodes,\n          ...nodesAsObject,\n        },\n        links: {\n          ...state.links,\n          ...linksAsObject,\n        },\n        groups: {\n          ...state.groups,\n          ...groupsAsObject,\n        },\n      };\n    }\n    case GRAPH_GROUPS_ADD: {\n      const group = action.payload;\n      return {\n        ...state,\n        groups: {\n          ...state.groups,\n          [group.id]: group,\n        },\n      };\n    }\n    case GRAPH_GROUPS_REMOVE: {\n      const groupId = action.payload;\n      const newGroups = { ...state.groups };\n      delete newGroups[groupId];\n      const nodes = Object.keys(state.nodes)\n        .map((nodeId) => state.nodes[nodeId])\n        .map((node) => ({\n          ...node,\n          groups: (node.groups || []).filter((ng) => ng.id !== groupId),\n        }))\n        .reduce(\n          (nodesMap, node) => ({\n            ...nodesMap,\n            [node.id]: node,\n          }),\n          {}\n        );\n      const links = Object.keys(state.links)\n        .map((linkId) => state.links[linkId])\n        .map((link) => ({\n          ...link,\n          groups: (link.groups || []).filter((lg) => lg.id !== groupId),\n        }))\n        .reduce(\n          (linksMap, link) => ({\n            ...linksMap,\n            [link.id]: link,\n          }),\n          {}\n        );\n      return {\n        ...state,\n        groups: {\n          ...newGroups,\n        },\n        nodes,\n        links,\n      };\n    }\n    case GRAPH_GROUPS_UPDATE: {\n      const group = action.payload;\n      const nodes = Object.keys(state.nodes)\n        .map((nodeId) => state.nodes[nodeId])\n        .map((node) => {\n          const groups = !!node.groups ? [...node.groups] : [];\n          const groupIndex = groups.findIndex((ng) => ng.id === group.id);\n          if (groupIndex >= 0) {\n            groups.splice(groupIndex, 1);\n            return {\n              ...node,\n              groups: [...groups, group],\n            };\n          } else {\n            return node;\n          }\n        })\n        .reduce(\n          (nodesMap, node) => ({\n            ...nodesMap,\n            [node.id]: node,\n          }),\n          {}\n        );\n      const links = Object.keys(state.links)\n        .map((linkId) => state.links[linkId])\n        .map((link) => {\n          const groups = !!link.groups ? [...link.groups] : [];\n          const groupIndex = groups.findIndex((lg) => lg.id === group.id);\n          if (groupIndex >= 0) {\n            groups.splice(groupIndex, 1);\n            return {\n              ...link,\n              groups: [...groups, group],\n            };\n          } else {\n            return link;\n          }\n        })\n        .reduce(\n          (linksMap, link) => ({\n            ...linksMap,\n            [link.id]: link,\n          }),\n          {}\n        );\n      return {\n        ...state,\n        groups: {\n          ...state.groups,\n          [group.id]: group,\n        },\n        nodes,\n        links,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { validate } from 'jsonschema';\nimport graphJsonSchema from './graph-schema';\n\nexport const GRAPH_STORAGE_PREFIX = 'grapher/services/graphs/';\n\nexport class GraphService {\n  saveGraph(graph) {\n    const { id } = graph;\n    const graphStorageKey = this.getGraphStorageKey(id);\n    localStorage.setItem(graphStorageKey, JSON.stringify(graph));\n  }\n\n  readGraph(id) {\n    const graphStorageKey = this.getGraphStorageKey(id);\n    const graph = localStorage.getItem(graphStorageKey);\n    return JSON.parse(graph);\n  }\n\n  removeGraph(id) {\n    const graphStorageKey = this.getGraphStorageKey(id);\n    localStorage.removeItem(graphStorageKey);\n  }\n\n  getGraphStorageKey(id) {\n    return GRAPH_STORAGE_PREFIX + id;\n  }\n\n  serializeGraph(graph) {\n    return JSON.stringify(graph, null, 2);\n  }\n\n  deserializeGraph(serializedGraph) {\n    let graph;\n    try {\n      graph = JSON.parse(serializedGraph);\n    } catch (error) {\n      return { errors: ['Invalid JSON'] };\n    }\n    const validationResult = validate(graph, graphJsonSchema);\n    if (!validationResult.valid) {\n      const errors = validationResult.errors.map((error) => error.stack).map((error) => error.replace('instance', 'Graph'));\n      return { errors };\n    }\n    return { graph };\n  }\n}\n\nexport default new GraphService();\n","import { createSelector } from 'reselect';\n\nimport graphService from '../../services/graph.service';\n\nexport function graphSelector(state) {\n  return state.graph;\n}\n\nexport function getId(state) {\n  return graphSelector(state).id;\n}\n\nexport function getName(state) {\n  return graphSelector(state).name;\n}\n\nfunction getNodes(state) {\n  return graphSelector(state).nodes;\n}\n\nexport function getLinks(state) {\n  return graphSelector(state).links;\n}\n\nexport function getLinkById(state, linkId) {\n  return getLinks(state)[linkId];\n}\n\nexport const getNodesAsArray = createSelector(\n  getNodes,\n  (nodes) => Object.values(nodes)\n);\n\nexport const getLinksAsArray = createSelector(\n  getLinks,\n  (links) => Object.values(links)\n);\n\nexport const getNodesIds = createSelector(\n  getNodes,\n  (nodes) => Object.keys(nodes)\n);\n\n/**\n * Gets a list of links that have an opposite link, that is, where there's another link which source is this one target and vice versa.\n */\nexport const getLinksWithOpposite = createSelector(\n  getLinksAsArray,\n  (links) => links.filter((link) => !!getOppositeLink(links, link))\n);\n\n/**\n * Gets the IDs of links that have an opposite link, that is, where there's another link which source is this one target and vice versa.\n */\nexport const getLinksIdsWithOpposite = createSelector(\n  getLinksWithOpposite,\n  (links) => links.map((link) => link.id)\n);\n\nexport const getSerializedGraph = createSelector(\n  graphSelector,\n  (graph) => graphService.serializeGraph(graph)\n);\n\nconst getGroups = createSelector(\n  graphSelector,\n  (graph) => graph.groups\n);\n\nexport const getGroupsAsArray = createSelector(\n  getGroups,\n  (groups) => Object.keys(groups).map((groupId) => groups[groupId])\n);\n\nfunction getOppositeLink(links, { source, target }) {\n  return links.find(({ source: candidateSource, target: candidateTarget }) => candidateSource === target && candidateTarget === source);\n}\n","import { select, takeLatest, call, put } from 'redux-saga/effects';\n\nimport graphService from '../../services/graph.service';\nimport graphNamesService from '../../services/graph-names.service';\nimport { graphSelector } from './graph.selectors';\nimport {\n  GRAPH_CREATE,\n  GRAPH_SET_NAME,\n  GRAPH_CREATE_NODE,\n  GRAPH_CREATE_LINK,\n  GRAPH_DELETE_NODE,\n  GRAPH_DELETE_LINK,\n  GRAPH_EDIT_NODE,\n  GRAPH_EDIT_LINK,\n  GRAPH_LOAD,\n  GRAPH_DELETE,\n  GRAPH_GROUPS_ADD,\n  GRAPH_GROUPS_REMOVE,\n  GRAPH_GROUPS_UPDATE,\n  loadGraphSuccess,\n  GRAPH_IMPORT_SUBGRAPH,\n} from './graph.actions';\n\nexport function* saveGraph() {\n  const graph = yield select(graphSelector);\n  yield call([graphService, 'saveGraph'], graph);\n  yield call([graphNamesService, 'saveGraphName'], graph.id, graph.name);\n}\n\nexport function* saveGraphSaga() {\n  yield takeLatest(\n    [\n      GRAPH_CREATE,\n      GRAPH_SET_NAME,\n      GRAPH_CREATE_NODE,\n      GRAPH_CREATE_LINK,\n      GRAPH_DELETE_NODE,\n      GRAPH_DELETE_LINK,\n      GRAPH_EDIT_NODE,\n      GRAPH_EDIT_LINK,\n      GRAPH_GROUPS_ADD,\n      GRAPH_GROUPS_REMOVE,\n      GRAPH_GROUPS_UPDATE,\n      GRAPH_IMPORT_SUBGRAPH,\n    ],\n    saveGraph\n  );\n}\n\nexport function* doLoadGraph(action) {\n  const graphId = action.payload;\n  const graph = yield call([graphService, 'readGraph'], graphId);\n  yield put(loadGraphSuccess(graph));\n}\n\nexport function* loadGraphSaga() {\n  yield takeLatest([GRAPH_LOAD], doLoadGraph);\n}\n\nexport function* doDeleteGraph({ payload: graphId }) {\n  yield call([graphService, 'removeGraph'], graphId);\n  yield call([graphNamesService, 'removeGraphName'], graphId);\n}\n\nexport function* deleteGraphSaga() {\n  yield takeLatest([GRAPH_DELETE], doDeleteGraph);\n}\n","import { createSelector } from 'reselect';\nimport entries from 'lodash/entries';\n\nimport graphNamesService from '../../services/graph-names.service';\nimport { GRAPH_SET_NAME, GRAPH_CREATE, GRAPH_DELETE } from '../../ducks/graph';\n\nconst initialState = graphNamesService.getGraphNames();\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GRAPH_CREATE: {\n      const { id, name } = action.payload;\n      return {\n        ...state,\n        [id]: name,\n      };\n    }\n    case GRAPH_DELETE: {\n      const { payload: graphId } = action;\n      const newState = { ...state };\n      delete newState[graphId];\n      return newState;\n    }\n    case GRAPH_SET_NAME: {\n      const { id, name } = action.payload;\n      return {\n        ...state,\n        [id]: name,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function getGraphNames(state) {\n  return state.graphList;\n}\n\nexport const getGraphNamesAsArray = createSelector(\n  getGraphNames,\n  (graphNames) => entries(graphNames)\n);\n","export const MAX_SELECTED_NODES = 2;\nexport const ROUTES = {\n  BASE: '/',\n  GRAPHS: '/graphs',\n  NEW_GRAPH: '/new',\n  GRAPH: '/graphs/:graphId',\n  IMPORT_GRAPH: '/import',\n};\n","import { createSelector } from 'reselect';\n\nimport { MAX_SELECTED_NODES } from '../../../../../../constants';\nimport { GRAPH_DELETE_NODE, GRAPH_EDIT_NODE, getLinksAsArray } from '../../../../../../ducks/graph';\n\nexport const NODE_SELECTION_SELECT = 'grapher/NodeSelection/SELECT';\nexport const NODE_SELECTION_DESELECT = 'grapher/NodeSelection/DESELECT';\n\nconst initialState = {\n  selectedNodes: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case NODE_SELECTION_SELECT: {\n      let selectedNodes = state.selectedNodes;\n      // prettier-ignore\n      return {\n        ...state,\n        selectedNodes: [\n          ...selectedNodes.slice(selectedNodes.length === MAX_SELECTED_NODES ? 1 : 0),\n          action.payload,\n        ],\n      };\n    }\n    case NODE_SELECTION_DESELECT: {\n      return {\n        ...state,\n        selectedNodes: state.selectedNodes.filter((node) => node.id !== action.payload),\n      };\n    }\n    case GRAPH_DELETE_NODE: {\n      return {\n        ...state,\n        selectedNodes: state.selectedNodes.filter((node) => node.id !== action.payload),\n      };\n    }\n    case GRAPH_EDIT_NODE: {\n      const { oldId, node: editedNode } = action.payload;\n      return {\n        ...state,\n        selectedNodes: state.selectedNodes.map((node) => (node.id === oldId ? editedNode : node)),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function selectNode(node) {\n  return {\n    type: NODE_SELECTION_SELECT,\n    payload: node,\n  };\n}\n\nexport function deselectNode(nodeId) {\n  return {\n    type: NODE_SELECTION_DESELECT,\n    payload: nodeId,\n  };\n}\n\nfunction nodeSelectionSelector(state) {\n  return state.nodeSelection;\n}\n\nexport function getSelectedNodes(state) {\n  return nodeSelectionSelector(state).selectedNodes;\n}\n\nexport const getNonExistentLinkBetweenSelectedNodes = createSelector(\n  getSelectedNodes,\n  getLinksAsArray,\n  (selectedNodes = [], links = []) => {\n    if (selectedNodes.length === 2) {\n      const [source, target] = selectedNodes.map((n) => n.id);\n      const link = links.find(({ source: ls, target: lt }) => (ls === source || ls === target) && (lt === target || lt === source));\n      if (!link) {\n        return { source, target };\n      }\n    }\n  }\n);\n","import { GRAPH_DELETE_LINK, GRAPH_DELETE_NODE, GRAPH_EDIT_NODE, GRAPH_EDIT_LINK } from '../../../../../../ducks/graph';\n\nexport const LINK_SELECTION_SELECT = 'grapher/LinkSelection/SELECT';\nexport const LINK_SELECTION_DESELECT = 'grapher/LinkSelection/DESELECT';\n\nconst initialState = {\n  selectedLink: undefined,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LINK_SELECTION_SELECT: {\n      // prettier-ignore\n      return {\n        ...state,\n        selectedLink: action.payload,\n      };\n    }\n    case LINK_SELECTION_DESELECT: {\n      return {\n        ...state,\n        selectedLink: undefined,\n      };\n    }\n    case GRAPH_DELETE_LINK: {\n      const { id: selectedLinkId } = state.selectedLink || {};\n      return {\n        ...state,\n        selectedLink: selectedLinkId === action.payload ? undefined : state.selectedLink,\n      };\n    }\n    case GRAPH_DELETE_NODE: {\n      const nodeId = action.payload;\n      const { source: selectedLinkSource, target: selectedLinkTarget } = state.selectedLink || {};\n      return {\n        ...state,\n        selectedLink: nodeId !== selectedLinkSource && nodeId !== selectedLinkTarget ? state.selectedLink : undefined,\n      };\n    }\n    case GRAPH_EDIT_NODE: {\n      const { oldId, node } = action.payload;\n      let selectedLink;\n      if (state.selectedLink) {\n        selectedLink = {\n          source: state.selectedLink.source === oldId ? node.id : state.selectedLink.source,\n          target: state.selectedLink.target === oldId ? node.id : state.selectedLink.target,\n        };\n      }\n      return {\n        ...state,\n        selectedLink,\n      };\n    }\n    case GRAPH_EDIT_LINK: {\n      const { id: selectedLinkId } = state.selectedLink || {};\n      const link = action.payload;\n      return {\n        ...state,\n        selectedLink: selectedLinkId === link.id ? link : state.selectedLink,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function selectLink(link) {\n  return {\n    type: LINK_SELECTION_SELECT,\n    payload: link,\n  };\n}\n\nexport function deselectLink() {\n  return {\n    type: LINK_SELECTION_DESELECT,\n  };\n}\n\nfunction linkSelectionSelector(state) {\n  return state.linkSelection;\n}\n\nexport function getSelectedLink(state) {\n  return linkSelectionSelector(state).selectedLink;\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { createSelector } from 'reselect';\nimport { takeLatest, call, put } from 'redux-saga/effects';\n\nimport graphService from '../../services/graph.service';\nimport { createGraph } from '../../ducks/graph';\n\nexport const GRAPH_IMPORT = 'grapher/GraphImport/IMPORT';\nexport const GRAPH_IMPORT_SUCCESS = 'grapher/GraphImport/IMPORT_SUCCESS';\nexport const GRAPH_IMPORT_FAILURE = 'grapher/GraphImport/IMPORT_FAILURE';\n\nconst initialState = {\n  errors: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GRAPH_IMPORT_FAILURE: {\n      return {\n        ...state,\n        errors: action.payload,\n      };\n    }\n    case GRAPH_IMPORT_SUCCESS: {\n      return {\n        ...state,\n        errors: [],\n      };\n    }\n    case GRAPH_IMPORT: {\n      return {\n        ...state,\n        errors: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function importGraph(serializedGraph) {\n  return {\n    type: GRAPH_IMPORT,\n    payload: serializedGraph,\n  };\n}\n\nexport function importGraphSuccess(graph) {\n  return {\n    type: GRAPH_IMPORT_SUCCESS,\n    payload: graph,\n  };\n}\n\nexport function importGraphFailure(errors) {\n  return {\n    type: GRAPH_IMPORT_FAILURE,\n    payload: errors,\n  };\n}\n\nfunction graphImportSelector(state) {\n  return state.graphImport;\n}\n\nexport const getErrors = createSelector(\n  graphImportSelector,\n  (graphImportState) => graphImportState.errors\n);\n\nexport function* doImportGraph(action) {\n  const serializedGraph = action.payload;\n  const { errors, graph } = yield call([graphService, 'deserializeGraph'], serializedGraph);\n  if (!!errors) {\n    yield put(importGraphFailure(errors));\n  } else {\n    yield put(importGraphSuccess(graph));\n    yield put(createGraph(graph));\n  }\n}\n\nexport function* importGraphSaga() {\n  yield takeLatest([GRAPH_IMPORT], doImportGraph);\n}\n","import { takeLatest, call } from 'redux-saga/effects';\n\nimport history from '../services/history.service';\nimport { GRAPH_CREATE, GRAPH_DELETE } from './graph';\nimport { GRAPH_IMPORT_SUCCESS } from '../scenes/graph-import/graph-import.duck';\nimport { ROUTES } from '../constants';\n\n// Actions\nexport const GRAPH_IMPORT_OPEN = 'grapher/Navigation/GRAPH_IMPORT_OPEN';\nexport const NEW_GRAPH_OPEN = 'grapher/Navigation/NEW_GRAPH_OPEN';\nexport const GRAPH_OPEN = 'grapher/Navigation/GRAPH_OPEN';\nexport const GRAPH_LIST_OPEN = 'grapher/Navigation/GRAPH_LIST_OPEN';\n\nexport function openImportGraph() {\n  return {\n    type: GRAPH_IMPORT_OPEN,\n  };\n}\n\nexport function openNewGraph() {\n  return {\n    type: NEW_GRAPH_OPEN,\n  };\n}\n\nexport function openGraph(id) {\n  return {\n    type: GRAPH_OPEN,\n    payload: id,\n  };\n}\n\nexport function openGraphList() {\n  return {\n    type: GRAPH_LIST_OPEN,\n  };\n}\n\n// Sagas\nexport function* navigate({ type, payload }) {\n  switch (type) {\n    case NEW_GRAPH_OPEN: {\n      yield call([history, 'push'], ROUTES.NEW_GRAPH);\n      break;\n    }\n    case GRAPH_LIST_OPEN:\n    case GRAPH_DELETE: {\n      yield call([history, 'push'], ROUTES.BASE);\n      break;\n    }\n    case GRAPH_OPEN: {\n      yield call([history, 'push'], `${ROUTES.GRAPHS}/${payload}`);\n      break;\n    }\n    case GRAPH_CREATE: {\n      yield call([history, 'push'], `${ROUTES.GRAPHS}/${payload.id}`);\n      break;\n    }\n    case GRAPH_IMPORT_OPEN: {\n      yield call([history, 'push'], ROUTES.IMPORT_GRAPH);\n      break;\n    }\n    case GRAPH_IMPORT_SUCCESS: {\n      yield call([history, 'push'], `${ROUTES.GRAPHS}/${payload.id}`);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n}\n\nexport function* navigateSaga() {\n  yield takeLatest([NEW_GRAPH_OPEN, GRAPH_LIST_OPEN, GRAPH_OPEN, GRAPH_CREATE, GRAPH_DELETE, GRAPH_IMPORT_OPEN, GRAPH_IMPORT_SUCCESS], navigate);\n}\n","export const DIALOG_IDS = {\n  EDIT_GRAPH: 'editgraph',\n  EDIT_LINK: 'editlink',\n  EDIT_NODE: 'editnode',\n  NEW_NODE: 'newnode',\n  NEW_LINK: 'newlink',\n  CONFIRM_DELETE_GRAPH: 'confirmdeletegraph',\n  CONFIRM_DELETE_LINK: 'confirmdeletelink',\n  CONFIRM_DELETE_NODE: 'confirmdeletenode',\n  EXPORT_GRAPH: 'exportgraph',\n};\n\nexport const DIALOG_OPEN = 'grapher/EditGraph/OPEN';\nexport const DIALOG_CLOSE = 'grapher/EditGraph/CLOSE';\n\nconst initialState = {};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case DIALOG_OPEN: {\n      const { dialogId, metadata } = action.payload;\n      return {\n        ...state,\n        [dialogId]: {\n          isOpen: true,\n          metadata,\n        },\n      };\n    }\n    case DIALOG_CLOSE: {\n      const dialogId = action.payload;\n      return {\n        ...state,\n        [dialogId]: {\n          isOpen: false,\n          metadata: undefined,\n        },\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function openDialog(dialogId, metadata) {\n  return {\n    type: DIALOG_OPEN,\n    payload: {\n      dialogId,\n      metadata,\n    },\n  };\n}\n\nexport function closeDialog(dialogId) {\n  return {\n    type: DIALOG_CLOSE,\n    payload: dialogId,\n  };\n}\n\nfunction dialogSelector(state) {\n  return state.dialog;\n}\n\nfunction getDialogData(state, dialogId) {\n  return dialogSelector(state)[dialogId];\n}\n\nexport function getIsOpen(state, dialogId) {\n  const dialogData = getDialogData(state, dialogId);\n  return !!dialogData && dialogData.isOpen;\n}\n\nexport function getMetadata(state, dialogId) {\n  const dialogData = getDialogData(state, dialogId);\n  return !!dialogData ? dialogData.metadata : undefined;\n}\n","import { createSelector } from 'reselect';\nimport { takeLatest, call, select } from 'redux-saga/effects';\n\nexport const CANVAS_REGISTER_CANVAS_COMPONENT = 'grapher/Canvas/REGISTER_CANVAS_COMPONENT';\nexport const CANVAS_REFRESH = 'grapher/Canvas/REFRESH';\n\nconst initialState = {\n  canvasComponent: undefined,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case CANVAS_REGISTER_CANVAS_COMPONENT: {\n      return {\n        ...state,\n        canvasComponent: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function registerCanvasComponent(canvasComponent) {\n  return {\n    type: CANVAS_REGISTER_CANVAS_COMPONENT,\n    payload: canvasComponent,\n  };\n}\n\nexport function refresh() {\n  return {\n    type: CANVAS_REFRESH,\n  };\n}\n\nfunction canvasSelector(state) {\n  return state.canvas;\n}\n\nconst getCanvasComponent = createSelector(\n  canvasSelector,\n  (canvas) => canvas.canvasComponent\n);\n\nexport function* doRefresh() {\n  const canvasComponent = yield select(getCanvasComponent);\n  yield call([canvasComponent, 'refresh']);\n}\n\nexport function* refreshSaga() {\n  yield takeLatest([CANVAS_REFRESH], doRefresh);\n}\n","import * as ohm from 'ohm-js';\nimport _flattenDeep from 'lodash/flattenDeep';\nimport _omitBy from 'lodash/omitBy';\nimport _isNil from 'lodash/isNil';\nimport uuid from 'uuid/v4';\n\nconst grammar = `\nGrapher {\n\n  path\n      = partialPath+ node --partials\n      | node+ --nodes\n\n  partialPath = node link\n\n  node\n      = \"(\" identifier \")\" --nodeNoGroups\n      | \"(\" identifier groups \")\" --nodeGroups\n\n  link\n      = \"-[\" identifier \"]->\" --forwardWithLabel\n      | \"<-[\" identifier \"]-\" --backwardWithLabel\n      | \"-[\" identifier? groups \"]->\" --forwardGroups\n      | \"<-[\" identifier? groups \"]-\" --backwardGroups\n      | \"->\" --forward\n      | \"<-\" --backward\n\n  groups\n      = groups+ --multipleGroups\n      | \":\" identifier --singleGroup\n\n  identifier\n      = identifier space identifier  --withBlanks\n      | alnum+ --string\n\n}\n`;\n\nconst mapGroup = (group) => {\n  return {\n    id: uuid(),\n    name: group.name,\n  };\n};\nconst mapNode = (node) =>\n  _omitBy(\n    {\n      id: node.id,\n      groups: !!node.groups ? node.groups.map(mapGroup) : undefined,\n    },\n    _isNil\n  );\n\nclass GraphGrammar {\n  grammar;\n  semantics;\n\n  async initialize() {\n    this.grammar = ohm.grammar(grammar);\n    this.semantics = this.grammar.createSemantics().addOperation('eval', {\n      path_partials: (partialPaths, node) => {\n        const entities = _flattenDeep([...partialPaths.eval(), node.eval()]);\n        const groups = entities.filter(({ type }) => type === 'group');\n        const nodesAndLinks = entities.filter(({ type }) => type !== 'group');\n        return {\n          nodes: nodesAndLinks.filter((entity) => entity.type === 'node').map(mapNode),\n          links: nodesAndLinks\n            .map((entity, index) => [entity, index])\n            .filter(([entity]) => entity.type === 'link')\n            .map(([entity, index]) => {\n              const source = entity.direction === 'back' ? nodesAndLinks[index + 1].id : nodesAndLinks[index - 1].id;\n              const target = entity.direction === 'back' ? nodesAndLinks[index - 1].id : nodesAndLinks[index + 1].id;\n              const label = entity.label || `${source}-${target}`;\n              return {\n                id: entity.id,\n                label,\n                source,\n                target,\n                groups: !!entity.groups ? entity.groups.map(mapGroup) : undefined,\n              };\n            }),\n          groups: groups.map(mapGroup).filter((item, index, groups) => groups.findIndex((candidate) => candidate.name === item.name) === index),\n        };\n      },\n      path_nodes: (nodes) => {\n        const entities = _flattenDeep(nodes.eval());\n        return {\n          nodes: entities.filter(({ type }) => type === 'node').map(mapNode),\n          groups: entities\n            .filter(({ type }) => type === 'group')\n            .map(mapGroup)\n            .filter((item, index, groups) => groups.findIndex((candidate) => candidate.name === item.name) === index),\n        };\n      },\n      partialPath: (node, link) => _flattenDeep([node.eval(), link.eval()]),\n      node_nodeNoGroups: (open, identifier, close) => [\n        {\n          type: 'node',\n          id: identifier.eval(),\n        },\n      ],\n      node_nodeGroups: (open, identifier, groups, close) => {\n        const groupsArray = groups.eval();\n        return [\n          {\n            type: 'node',\n            id: identifier.eval(),\n            groups: groupsArray.map(mapGroup),\n          },\n          ...groupsArray,\n        ];\n      },\n      link_forwardWithLabel: (open, identifier, close) => [\n        {\n          type: 'link',\n          direction: 'forth',\n          label: identifier.eval(),\n          id: uuid(),\n        },\n      ],\n      link_backwardWithLabel: (close, identifier, open) => [\n        {\n          type: 'link',\n          direction: 'back',\n          label: identifier.eval(),\n          id: uuid(),\n        },\n      ],\n      link_forwardGroups: (open, identifier, groups, close) => {\n        const groupsArray = groups.eval();\n        return [\n          _omitBy(\n            {\n              type: 'link',\n              direction: 'forth',\n              label: !!identifier ? identifier.eval()[0] : undefined,\n              id: uuid(),\n              groups: groupsArray.map(mapGroup),\n            },\n            _isNil\n          ),\n          ...groupsArray,\n        ];\n      },\n      link_backwardGroups: (close, identifier, groups, open) => {\n        const groupsArray = groups.eval();\n        return [\n          _omitBy(\n            {\n              type: 'link',\n              direction: 'back',\n              label: !!identifier ? identifier.eval()[0] : undefined,\n              id: uuid(),\n              groups: groupsArray.map(mapGroup),\n            },\n            _isNil\n          ),\n          ...groupsArray,\n        ];\n      },\n      link_forward: (chars) => [\n        {\n          type: 'link',\n          direction: 'forth',\n          id: uuid(),\n        },\n      ],\n      link_backward: (chars) => [\n        {\n          type: 'link',\n          direction: 'back',\n          id: uuid(),\n        },\n      ],\n      groups_singleGroup: (colon, identifier) => [\n        {\n          type: 'group',\n          name: identifier.eval(),\n        },\n      ],\n      groups_multipleGroups: (groups) => _flattenDeep(groups.eval()),\n      identifier_string: function(chars) {\n        return this.sourceString;\n      },\n      identifier_withBlanks: function(firstIdentifier, space, secondIdentifier) {\n        return this.sourceString;\n      },\n    });\n  }\n\n  match(string) {\n    return this.grammar.match(string);\n  }\n\n  eval(matchResult) {\n    return this.semantics(matchResult).eval();\n  }\n}\n\nconst graphGrammar = new GraphGrammar();\ngraphGrammar.initialize();\nexport default graphGrammar;\n","import { createSelector } from 'reselect';\nimport { takeLatest, call, put, delay, select } from 'redux-saga/effects';\n\nimport graphGrammar from '../services/graph-grammar';\nimport { importSubgraph as graphImportSubgraph } from './graph';\n\nexport const SUBGRAPH_PROCESS = 'grapher/SubgraphCreator/PROCESS';\nexport const SUBGRAPH_PROCESS_SUCCESS = 'grapher/SubgraphCreator/PROCESS_SUCCESS';\nexport const SUBGRAPH_PROCESS_FAILURE = 'grapher/SubgraphCreator/PROCESS_FAILURE';\nexport const SUBGRAPH_IMPORT = 'grapher/SubgraphCreator/IMPORT';\n\nconst initialState = {\n  nodes: [],\n  links: [],\n  groups: [],\n  processing: false,\n  error: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SUBGRAPH_PROCESS: {\n      return {\n        ...state,\n        processing: true,\n      };\n    }\n    case SUBGRAPH_PROCESS_SUCCESS: {\n      const { nodes, links, groups } = action.payload;\n      return {\n        ...state,\n        nodes,\n        links,\n        groups,\n        error: false,\n        processing: false,\n      };\n    }\n    case SUBGRAPH_PROCESS_FAILURE: {\n      return {\n        ...state,\n        error: true,\n        processing: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function processSubgraph(subgraphString) {\n  return {\n    type: SUBGRAPH_PROCESS,\n    payload: subgraphString,\n  };\n}\n\nexport function processSubgraphSuccess(subgraph) {\n  return {\n    type: SUBGRAPH_PROCESS_SUCCESS,\n    payload: subgraph,\n  };\n}\n\nexport function processSubgraphFailure() {\n  return {\n    type: SUBGRAPH_PROCESS_FAILURE,\n  };\n}\n\nexport function importSubgraph() {\n  return {\n    type: SUBGRAPH_IMPORT,\n  };\n}\n\nfunction subgraphCreatorSelector(state) {\n  return state.subgraphCreator;\n}\n\nexport const getError = createSelector(\n  subgraphCreatorSelector,\n  (state) => state.error\n);\n\nexport const getNodes = createSelector(\n  subgraphCreatorSelector,\n  (state) => state.nodes\n);\n\nexport const getLinks = createSelector(\n  subgraphCreatorSelector,\n  (state) => state.links\n);\n\nexport const getGroups = createSelector(\n  subgraphCreatorSelector,\n  (state) => state.groups\n);\n\nexport const getProcessing = createSelector(\n  subgraphCreatorSelector,\n  (state) => state.processing\n);\n\nexport function* subgraphProcess({ payload: subgraphString }) {\n  yield delay(500);\n  const matchResult = yield call([graphGrammar, 'match'], subgraphString);\n  if (!matchResult.succeeded()) {\n    yield put(processSubgraphFailure());\n  } else {\n    const subgraph = yield call([graphGrammar, 'eval'], matchResult);\n    yield put(processSubgraphSuccess(subgraph));\n  }\n}\n\nexport function* subgraphProcessSaga() {\n  yield takeLatest([SUBGRAPH_PROCESS], subgraphProcess);\n}\n\nexport function* doImportSubgraph() {\n  const nodes = yield select(getNodes);\n  const links = yield select(getLinks);\n  const groups = yield select(getGroups);\n  yield put(graphImportSubgraph(nodes, links, groups));\n}\n\nexport function* importSubgraphSaga() {\n  yield takeLatest([SUBGRAPH_IMPORT], doImportSubgraph);\n}\n","const dismissedOnboardingLocalStorageKey = 'grapher/onboarding/dimissed';\n\nexport const isDismissed = () => localStorage.getItem(dismissedOnboardingLocalStorageKey) === 'true';\n\nexport const markAsDismissed = () => localStorage.setItem(dismissedOnboardingLocalStorageKey, 'true');\n","import { createSelector } from 'reselect';\nimport { takeLatest, call } from 'redux-saga/effects';\n\nimport { isDismissed, markAsDismissed } from './onboarding.service';\n\n// Actions\nexport const ONBOARDING_DISMISS = 'grapher/Onboarding/DISMISS';\nexport const ONBOARDING_SHOW = 'grapher/Onboarding/SHOW';\n\nexport const dismissOnboarding = () => ({\n  type: ONBOARDING_DISMISS,\n});\n\nexport const showOnboarding = () => ({\n  type: ONBOARDING_SHOW,\n});\n\n// Reducer\nconst initialState = {\n  open: !isDismissed(),\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ONBOARDING_DISMISS: {\n      return {\n        ...state,\n        open: false,\n      };\n    }\n    case ONBOARDING_SHOW: {\n      return {\n        ...state,\n        open: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Selectors\nconst getOnboarding = (state) => state.onboarding;\nexport const isOpen = createSelector(\n  getOnboarding,\n  (onboardingState) => onboardingState.open\n);\n\n// Sagas\nexport function* doPersistDismiss() {\n  yield call(markAsDismissed);\n}\n\nexport function* persistDismiss() {\n  yield takeLatest([ONBOARDING_DISMISS], doPersistDismiss);\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport graphListReducer from './scenes/graph-list/graph-list.duck';\nimport graphReducer, { saveGraphSaga, loadGraphSaga, deleteGraphSaga } from './ducks/graph';\nimport nodeSelectionReducer from './scenes/graph/scenes/selection/scenes/nodes/node-selection.duck';\nimport linkSelectionReducer from './scenes/graph/scenes/selection/scenes/links/link-selection.duck';\nimport { navigateSaga } from './ducks/navigation.duck';\nimport dialogReducer from './ducks/dialog.duck';\nimport canvasReducer, { refreshSaga } from './components/canvas/canvas.duck';\nimport graphImportReducer, { importGraphSaga } from './scenes/graph-import/graph-import.duck';\nimport subgraphCreatorReducer, { subgraphProcessSaga, importSubgraphSaga } from './ducks/subgraph-creator.duck';\nimport onboardingReducer, { persistDismiss } from './scenes/graph/scenes/onboarding/onboarding.duck';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst reducer = combineReducers({\n  graphList: graphListReducer,\n  graph: graphReducer,\n  nodeSelection: nodeSelectionReducer,\n  linkSelection: linkSelectionReducer,\n  dialog: dialogReducer,\n  canvas: canvasReducer,\n  graphImport: graphImportReducer,\n  subgraphCreator: subgraphCreatorReducer,\n  onboarding: onboardingReducer,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(saveGraphSaga);\nsagaMiddleware.run(loadGraphSaga);\nsagaMiddleware.run(navigateSaga);\nsagaMiddleware.run(deleteGraphSaga);\nsagaMiddleware.run(refreshSaga);\nsagaMiddleware.run(importGraphSaga);\nsagaMiddleware.run(subgraphProcessSaga);\nsagaMiddleware.run(importSubgraphSaga);\nsagaMiddleware.run(persistDismiss);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst styles = (theme) => ({\n  root: {\n    marginLeft: -theme.spacing(2),\n    marginRight: theme.spacing(3),\n  },\n});\n\nfunction BackButton({ onBack, classes, className, ...props }) {\n  return (\n    <IconButton color=\"inherit\" className={clsx(classes.root, className)} {...props} onClick={onBack}>\n      <ArrowBackIcon />\n    </IconButton>\n  );\n}\n\nBackButton.propTypes = {\n  onBack: PropTypes.func.isRequired,\n  classes: PropTypes.any,\n  className: PropTypes.string,\n};\n\nexport default withStyles(styles, { withTheme: true })(BackButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport BackButton from './components/back-button.component';\n\nconst styles = {\n  title: {\n    flexGrow: 1,\n  },\n};\n\nfunction Navbar({ title, onBack, classes, children }) {\n  return (\n    <>\n      <AppBar>\n        <Toolbar>\n          {!!onBack && <BackButton onBack={onBack} />}\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\n            {title}\n          </Typography>\n          {children}\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  onBack: PropTypes.func,\n  classes: PropTypes.any,\n  children: PropTypes.any,\n};\n\nexport default withStyles(styles)(Navbar);\n","import { connect } from 'react-redux';\n\nimport NewGraph from './new-graph.component';\nimport { createGraph } from '../../ducks/graph';\nimport { openGraphList } from '../../ducks/navigation.duck';\n\nfunction mapStateToProps() {\n  return {\n    title: 'New graph',\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    saveNewGraph: (graphName) => dispatch(createGraph({ name: graphName })),\n    openGraphList: () => dispatch(openGraphList()),\n    cancelNewGraph: () => dispatch(openGraphList()),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewGraph);\n","import React, { useState } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Navbar from '../../components/navbar';\n\nfunction isGraphNameValid(newGraphName) {\n  return !!newGraphName.trim();\n}\n\nfunction submit(newGraphName, setError, saveNewGraph) {\n  if (!isGraphNameValid(newGraphName)) {\n    setError(true);\n  } else {\n    setError(false);\n    saveNewGraph(newGraphName);\n  }\n}\n\nexport default function NewGraph({ title, saveNewGraph, cancelNewGraph, openGraphList }) {\n  const [newGraphName, setNewGraphName] = useState('');\n  const [error, setError] = useState(false);\n  return (\n    <>\n      <Navbar title=\"New graph\" onBack={openGraphList} />\n      <Dialog open={true}>\n        <DialogTitle>{title}</DialogTitle>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            submit(newGraphName, setError, saveNewGraph);\n          }}\n        >\n          <DialogContent>\n            <TextField error={error} label=\"Graph name\" onChange={(event) => setNewGraphName(event.target.value)} value={newGraphName} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={cancelNewGraph} className=\"cancel\" type=\"button\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Done\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","import blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport _get from 'lodash/get';\n\nfunction renderNode(node, ctx, globalScale) {\n  if (node.selected) {\n    renderSelectedCircle(node, ctx);\n  }\n  renderCircle(node, ctx);\n  renderLabel(node, ctx, globalScale);\n}\n\nfunction renderSelectedCircle(node, ctx) {\n  const color = node.color === orange['A200'] ? blue['A200'] : orange['A200'];\n  ctx.strokeStyle = color;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(node.x, node.y, 6, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nfunction renderCircle(node, ctx) {\n  const color = getNodeColor(node);\n  ctx.strokeStyle = color;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(node.x, node.y, 5, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nfunction renderLabel(node, ctx, globalScale) {\n  const fontSize = globalScale;\n  ctx.font = `${fontSize}px Sans-Serif`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = '#000';\n  ctx.fillText(node.id, node.x, node.y + 8);\n}\n\nfunction getNodeColor(node) {\n  const nodeColor = node.color;\n  if (!!nodeColor) {\n    return nodeColor;\n  }\n  const groupColor = _get(node, 'groups[0].color');\n  if (!!groupColor) {\n    return groupColor;\n  }\n  return blue['A200'];\n}\n\nexport default renderNode;\n","import blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport grey from '@material-ui/core/colors/grey';\nimport _get from 'lodash/get';\n\nexport function getLinkColor(link) {\n  const groupColor = _get(link, 'groups[0].color');\n  if (!!groupColor) {\n    return groupColor;\n  }\n\n  const { virtual = false, selected = false, artificial = false } = link;\n  if (virtual) {\n    return blue['A200'];\n  } else if (selected) {\n    return orange['A200'];\n  } else if (artificial) {\n    return 'rgba(0, 0, 0, 0)';\n  } else {\n    return grey['300'];\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\n\nimport renderNode from './services/node-renderer.service';\nimport { getLinkColor } from './services/link-renderer.service';\n\nconst updateDimensions = (setDimensions, containerRef) => {\n  const headerHeight = window.innerWidth < 600 ? 60 : 70;\n  setDimensions({\n    width: containerRef.current.clientWidth,\n    height: window.innerHeight - headerHeight,\n  });\n};\n\nconst getNodeDegree = (node, links) => links.filter((link) => link.source === node.id || link.target === node.id).length;\n\nexport default ({\n  registerCanvasComponent,\n  linksIdsWithOpposite,\n  nodes = [],\n  selectedNodes = [],\n  selectNode,\n  deselectNode,\n  openEditNode,\n  openConfirmDeleteNode,\n  links = [],\n  selectedLink,\n  createLink,\n  selectLink,\n  deselectLink,\n  virtualLink,\n  openConfirmDeleteLink,\n  openNewNode,\n  className,\n}) => {\n  const forceGraphRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (!!registerCanvasComponent) {\n      registerCanvasComponent(forceGraphRef.current);\n    }\n  }, [registerCanvasComponent]);\n\n  // Manage resizing of the canvas\n  const [dimensions, setDimensions] = useState({ width: window.innerWidth, height: window.innerHeight });\n  useEffect(() => {\n    updateDimensions(setDimensions, containerRef);\n    const resize = () => updateDimensions(setDimensions, containerRef);\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, []);\n\n  // Manage zoom\n  const [zoom, setZoom] = useState(undefined);\n  useEffect(() => {\n    if (!!forceGraphRef.current.zoom) {\n      const newZoom = forceGraphRef.current.zoom();\n      if (!zoom) {\n        forceGraphRef.current.zoom(newZoom * 5);\n        setZoom(newZoom);\n      }\n    }\n  }, [zoom]);\n\n  // Manage links\n  const [linksGraphData, setLinksGraphData] = useState([]);\n  useEffect(() => {\n    setLinksGraphData((currentLinksGraphData) => {\n      let newLinksGraphData = links.map((link) => {\n        const linkGraphData = currentLinksGraphData.find(({ id }) => link.id === id);\n        return {\n          ...linkGraphData,\n          ...link,\n          original: link,\n          selected: link.id === (selectedLink || {}).id,\n          virtual: false,\n          artificial: false,\n        };\n      });\n      if (!!virtualLink) {\n        newLinksGraphData = [\n          ...newLinksGraphData,\n          {\n            ...virtualLink,\n            original: virtualLink,\n            virtual: true,\n          },\n        ];\n      }\n\n      // Create artificial links (invisible through link-renderer) to avoid orphan nodes from scattering\n      const lastNodeWithSomeDegree = nodes.reverse().find((node) => getNodeDegree(node, links) > 0);\n      if (!!lastNodeWithSomeDegree) {\n        newLinksGraphData = [\n          ...newLinksGraphData,\n          ...nodes\n            .filter((node) => getNodeDegree(node, links) === 0)\n            .map((node) => ({\n              source: lastNodeWithSomeDegree.id,\n              target: node.id,\n              artificial: true,\n            })),\n        ];\n      } else if (nodes.length > 0) {\n        newLinksGraphData = [\n          ...newLinksGraphData,\n          ...new Array(nodes.length - 1).fill(undefined).map((value, index) => ({\n            source: nodes[index].id,\n            target: nodes[index + 1].id,\n            artificial: true,\n          })),\n        ];\n      }\n      return newLinksGraphData;\n    });\n  }, [links, virtualLink, nodes, selectedNodes, selectedLink]);\n\n  // Manage nodes\n  const [nodesGraphData, setNodesGraphData] = useState([]);\n  useEffect(() => {\n    setNodesGraphData((currentNodesGraphData) =>\n      nodes.map((node) => {\n        const nodeGraphData = currentNodesGraphData.find(({ id }) => id === node.id);\n        return {\n          ...nodeGraphData,\n          ...node,\n          degree: getNodeDegree(node, links),\n          selected: !!selectedNodes.find(({ id }) => id === node.id),\n        };\n      })\n    );\n  }, [nodes, links, selectedNodes]);\n\n  return (\n    <div\n      className={className}\n      onDoubleClick={openNewNode}\n      tabIndex=\"0\"\n      onKeyUp={({ key }) => {\n        switch (key) {\n          case 'Backspace':\n          case 'Delete':\n            if (!!selectedNodes.length && !selectedLink) {\n              openConfirmDeleteNode(selectedNodes.map((node) => node.id));\n            } else if (!selectedNodes.length && !!selectedLink) {\n              openConfirmDeleteLink(selectedLink.id);\n            }\n            break;\n          case 'Enter':\n            if (selectedNodes.length === 1) {\n              openEditNode(selectedNodes[0]);\n            }\n            break;\n          default:\n            break;\n        }\n      }}\n      ref={containerRef}\n    >\n      <ForceGraph2D\n        ref={forceGraphRef}\n        graphData={{\n          nodes: nodesGraphData,\n          links: linksGraphData,\n        }}\n        width={dimensions.width}\n        height={dimensions.height}\n        enableNodeDrag={true}\n        nodeCanvasObject={renderNode}\n        nodeLabel=\"id\"\n        linkDirectionalArrowLength={5}\n        linkDirectionalArrowRelPos={1}\n        linkColor={getLinkColor}\n        linkWidth={3}\n        linkDirectionalParticles={4}\n        linkDirectionalParticleWidth={(link) => (link.selected ? 4 : 0)}\n        linkLabel=\"label\"\n        linkCurvature={({ id }) => (!!linksIdsWithOpposite.find((linkId) => linkId === id) ? 0.3 : 0)}\n        onNodeClick={(node) => {\n          const isSelected = !!selectedNodes.find((n) => n.id === node.id);\n          if (isSelected && !!deselectNode) {\n            deselectNode(node.id);\n          } else if (!!selectNode) {\n            const actualNode = nodes.find((n) => n.id === node.id);\n            selectNode(actualNode);\n          }\n        }}\n        onLinkClick={(link) => {\n          const originalLink = link.original;\n          if (link.virtual) {\n            createLink(originalLink);\n          } else if (link.selected) {\n            deselectLink(originalLink);\n          } else {\n            selectLink(originalLink);\n          }\n        }}\n      />\n    </div>\n  );\n};\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getNodesAsArray, getLinksAsArray, createLink, getLinksIdsWithOpposite } from '../../ducks/graph';\nimport Canvas from './canvas.component';\nimport { openDialog, DIALOG_IDS } from '../../ducks/dialog.duck';\nimport {\n  selectNode,\n  deselectNode,\n  getSelectedNodes,\n  getNonExistentLinkBetweenSelectedNodes,\n} from '../../scenes/graph/scenes/selection/scenes/nodes/node-selection.duck';\nimport { getSelectedLink, selectLink, deselectLink } from '../../scenes/graph/scenes/selection/scenes/links/link-selection.duck';\nimport { registerCanvasComponent } from './canvas.duck';\n\nfunction mapStateToProps(state) {\n  return {\n    nodes: getNodesAsArray(state),\n    links: getLinksAsArray(state),\n    selectedNodes: getSelectedNodes(state),\n    virtualLink: getNonExistentLinkBetweenSelectedNodes(state),\n    selectedLink: getSelectedLink(state),\n    linksIdsWithOpposite: getLinksIdsWithOpposite(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    ...bindActionCreators(\n      {\n        selectNode,\n        deselectNode,\n        createLink,\n        selectLink,\n        deselectLink,\n        registerCanvasComponent,\n      },\n      dispatch\n    ),\n    openNewNode: () => dispatch(openDialog(DIALOG_IDS.NEW_NODE)),\n    openEditNode: (node) => dispatch(openDialog(DIALOG_IDS.EDIT_NODE, node)),\n    openConfirmDeleteLink: (linkId) => dispatch(openDialog(DIALOG_IDS.CONFIRM_DELETE_LINK, linkId)),\n    openConfirmDeleteNode: (nodeIds) => dispatch(openDialog(DIALOG_IDS.CONFIRM_DELETE_NODE, nodeIds)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Canvas);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nfunction ConfirmDeleteNode({ isOpen, nodeIds = [], deleteNodes, cancel }) {\n  const nodesLabel = nodeIds.length > 1 ? 'nodes' : 'node';\n  const theseLabel = nodeIds.length > 1 ? 'these' : 'this';\n  const nodes = nodeIds.map((nodeId) => (\n    <ListItem key={nodeId}>\n      <ListItemText primary={nodeId} />\n    </ListItem>\n  ));\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Delete {nodesLabel}?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          You are about to delete {theseLabel} {nodesLabel}:\n        </DialogContentText>\n        <List>{nodes}</List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={cancel} className=\"cancel\">\n          Cancel\n        </Button>\n        <Button onClick={() => deleteNodes(nodeIds)} className=\"delete\" color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmDeleteNode.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  deleteNodes: PropTypes.func,\n  cancel: PropTypes.func,\n};\n\nexport default ConfirmDeleteNode;\n","import { connect } from 'react-redux';\n\nimport ConfirmDeleteNode from './confirm-delete-node.component';\nimport { getIsOpen, closeDialog, getMetadata, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { deleteNode } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.CONFIRM_DELETE_NODE),\n    nodeIds: getMetadata(state, DIALOG_IDS.CONFIRM_DELETE_NODE),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteNodes: (nodeIds) => {\n      nodeIds.forEach((nodeId) => dispatch(deleteNode(nodeId)));\n      dispatch(closeDialog(DIALOG_IDS.CONFIRM_DELETE_NODE));\n    },\n    cancel: () => dispatch(closeDialog(DIALOG_IDS.CONFIRM_DELETE_NODE)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfirmDeleteNode);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\nfunction ConfirmDeleteLink({ isOpen, linkLabel, linkId, deleteLink, cancel }) {\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Delete {linkLabel}?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>You are about to delete this link: {linkLabel}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={cancel} className=\"cancel\">\n          Cancel\n        </Button>\n        <Button onClick={() => deleteLink(linkId)} className=\"delete\" color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmDeleteLink.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  linkId: PropTypes.string,\n  linkLabel: PropTypes.string,\n  deleteLink: PropTypes.func,\n  cancel: PropTypes.func,\n};\n\nexport default ConfirmDeleteLink;\n","import { connect } from 'react-redux';\n\nimport ConfirmDeleteLink from './confirm-delete-link.component';\nimport { getIsOpen, closeDialog, getMetadata, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { deleteLink, getLinkById } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  const linkId = getMetadata(state, DIALOG_IDS.CONFIRM_DELETE_LINK);\n  const { label: linkLabel } = getLinkById(state, linkId) || {};\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.CONFIRM_DELETE_LINK),\n    linkId,\n    linkLabel,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteLink: (linkId) => {\n      dispatch(deleteLink(linkId));\n      dispatch(closeDialog(DIALOG_IDS.CONFIRM_DELETE_LINK));\n    },\n    cancel: () => dispatch(closeDialog(DIALOG_IDS.CONFIRM_DELETE_LINK)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfirmDeleteLink);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\nfunction ConfirmDeleteGraph({ isOpen, graphName, graphId, deleteGraph, cancel }) {\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Delete {graphName}?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>You are about to delete this graph: {graphName}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={cancel} className=\"cancel\">\n          Cancel\n        </Button>\n        <Button onClick={() => deleteGraph(graphId)} className=\"delete\" color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmDeleteGraph.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  graphName: PropTypes.string,\n  graphId: PropTypes.string,\n  deleteGraph: PropTypes.func,\n  cancel: PropTypes.func,\n};\n\nexport default ConfirmDeleteGraph;\n","import { connect } from 'react-redux';\n\nimport ConfirmDeleteGraph from './confirm-delete-graph.component';\nimport { getIsOpen, closeDialog, getMetadata, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { deleteGraph, getId } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.CONFIRM_DELETE_GRAPH),\n    graphName: getMetadata(state, DIALOG_IDS.CONFIRM_DELETE_GRAPH),\n    graphId: getId(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteGraph: (graphId) => {\n      dispatch(deleteGraph(graphId));\n      dispatch(closeDialog(DIALOG_IDS.CONFIRM_DELETE_GRAPH));\n    },\n    cancel: () => dispatch(closeDialog(DIALOG_IDS.CONFIRM_DELETE_GRAPH)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConfirmDeleteGraph);\n","import React from 'react';\n\nimport ConfirmDeleteNode from './scenes/node';\nimport ConfirmDeleteLink from './scenes/link';\nimport ConfirmDeleteGraph from './scenes/graph';\n\nfunction ConfirmDeletes() {\n  return (\n    <>\n      <ConfirmDeleteNode />\n      <ConfirmDeleteLink />\n      <ConfirmDeleteGraph />\n    </>\n  );\n}\n\nexport default ConfirmDeletes;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  chip: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nfunction SelectedNode({ node, openConfirmDeleteNode, className, openEditNode, classes }) {\n  const badges = (node.groups || []).map((group) => (\n    <Chip key={group.id} label={group.name} size=\"small\" color=\"secondary\" className={classes.chip} />\n  ));\n  return (\n    <Card className={className}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Node\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n          {node.id}\n        </Typography>\n        {badges}\n      </CardContent>\n      <CardActions>\n        <Button className=\"delete\" size=\"small\" onClick={() => openConfirmDeleteNode([node.id])}>\n          Delete\n        </Button>\n        <Button className=\"edit\" size=\"small\" onClick={() => openEditNode(node)}>\n          Edit\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nSelectedNode.propTypes = {\n  node: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  openConfirmDeleteNode: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  openEditNode: PropTypes.func.isRequired,\n  classes: PropTypes.any,\n};\n\nexport default withStyles(styles, { withTheme: true })(SelectedNode);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport styled from 'styled-components';\n\nimport SelectedNode from './components';\n\nexport const StyledSelectedNode = styled(SelectedNode)`\n  margin-bottom: 1rem;\n`;\n\nfunction SelectedNodes({ nodes = [], ...props }) {\n  return nodes.map((node) => <StyledSelectedNode key={node.id} node={node} {...props} />);\n}\n\nSelectedNodes.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  openConfirmDeleteNode: PropTypes.func.isRequired,\n  openEditNode: PropTypes.func.isRequired,\n};\n\nexport default SelectedNodes;\n","import { connect } from 'react-redux';\n\nimport SelectedNodes from './selected-nodes.component';\nimport { getSelectedNodes } from './node-selection.duck';\nimport { openDialog, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\n\nfunction mapStateToProps(state) {\n  return {\n    nodes: getSelectedNodes(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    openEditNode: (node) => dispatch(openDialog(DIALOG_IDS.EDIT_NODE, node)),\n    openConfirmDeleteNode: (nodeIds) => dispatch(openDialog(DIALOG_IDS.CONFIRM_DELETE_NODE, nodeIds)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedNodes);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  chip: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nfunction SelectedLink({ link, openConfirmDeleteLink, openEditLink, className, classes }) {\n  if (!link) {\n    return null;\n  }\n\n  const badges = (link.groups || []).map((group) => (\n    <Chip key={group.id} label={group.name} size=\"small\" color=\"secondary\" className={classes.chip} />\n  ));\n\n  return (\n    <Card className={className}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Link\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n          {link.label}\n        </Typography>\n        {badges}\n      </CardContent>\n      <CardActions>\n        <Button className=\"delete\" size=\"small\" onClick={() => openConfirmDeleteLink(link.id)}>\n          Delete\n        </Button>\n        <Button className=\"edit\" size=\"small\" onClick={() => openEditLink(link)}>\n          Edit\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nSelectedLink.propTypes = {\n  link: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }),\n  openConfirmDeleteLink: PropTypes.func.isRequired,\n  openEditLink: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default withStyles(styles, { withTheme: true })(SelectedLink);\n","import { connect } from 'react-redux';\n\nimport SelectedLink from './selected-link.component';\nimport { getSelectedLink } from './link-selection.duck';\nimport { openDialog, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\n\nfunction mapStateToProps(state) {\n  return {\n    link: getSelectedLink(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    openEditLink: (link) => dispatch(openDialog(DIALOG_IDS.EDIT_LINK, link)),\n    openConfirmDeleteLink: (linkId) => dispatch(openDialog(DIALOG_IDS.CONFIRM_DELETE_LINK, linkId)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedLink);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport SelectedNodes from './scenes/nodes';\nimport SelectedLink from './scenes/links';\n\nconst styles = (theme) => ({\n  link: {\n    marginBottom: theme.spacing(1),\n  },\n});\n\nfunction SelectedItems({ classes = {}, className }) {\n  return (\n    <div className={className}>\n      <SelectedLink className={classes.link} />\n      <SelectedNodes />\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(SelectedItems);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport BrightnessIcon1 from '@material-ui/icons/Brightness1';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nfunction SpeedDials({ openNewNode, openNewLink, refresh, ...props }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <SpeedDial\n      ariaLabel=\"Actions\"\n      open={open}\n      icon={<SpeedDialIcon />}\n      onClick={() => setOpen(!open)}\n      onClose={() => setOpen(false)}\n      onFocus={() => setOpen(true)}\n      onBlur={() => setOpen(false)}\n      onMouseEnter={() => setOpen(true)}\n      onMouseLeave={() => setOpen(false)}\n      direction=\"up\"\n      {...props}\n    >\n      <SpeedDialAction key=\"add-node\" icon={<BrightnessIcon1 />} tooltipTitle={'Add node'} onClick={openNewNode} tooltipOpen />\n      <SpeedDialAction key=\"add-link\" icon={<ArrowRightAltIcon />} tooltipTitle={'Add link'} onClick={openNewLink} tooltipOpen />\n      <SpeedDialAction key=\"refresh\" icon={<RefreshIcon />} tooltipTitle={'Refresh'} onClick={refresh} tooltipOpen />\n    </SpeedDial>\n  );\n}\n\nSpeedDials.propTypes = {\n  openNewNode: PropTypes.func.isRequired,\n  openNewLink: PropTypes.func.isRequired,\n  refresh: PropTypes.func.isRequired,\n};\n\nexport default SpeedDials;\n","import { connect } from 'react-redux';\n\nimport SpeedDials from './speed-dials.component';\nimport { openDialog, DIALOG_IDS } from '../../../../ducks/dialog.duck';\nimport { refresh } from '../../../../components/canvas/canvas.duck';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    openNewNode: () => dispatch(openDialog(DIALOG_IDS.NEW_NODE)),\n    openNewLink: () => dispatch(openDialog(DIALOG_IDS.NEW_LINK)),\n    refresh: () => dispatch(refresh()),\n  };\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(SpeedDials);\n","import React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  selectFormControl: {\n    display: 'block',\n  },\n  select: {\n    width: '100%',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function GroupsSelect({ groups, selectedGroups, onChange }) {\n  const classes = useStyles();\n  const [openSelect, setOpenSelect] = useState(false);\n  return (\n    <FormControl className={classes.selectFormControl}>\n      <InputLabel htmlFor=\"groups\">Groups</InputLabel>\n      <Select\n        open={openSelect}\n        multiple\n        value={selectedGroups}\n        onChange={(event) => {\n          onChange(event.target.value);\n          setOpenSelect(false);\n        }}\n        onOpen={() => setOpenSelect(true)}\n        input={<Input />}\n        renderValue={(selectedGroups) => (\n          <div className={classes.chips}>\n            {selectedGroups.map((group) => (\n              <Chip key={group.id} label={group.name} className={classes.chip} />\n            ))}\n          </div>\n        )}\n        MenuProps={MenuProps}\n        inputProps={{\n          id: 'groups',\n        }}\n        className={classes.select}\n      >\n        {groups.map((group) => (\n          <MenuItem key={group.id} value={group}>\n            {group.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupsSelect from '../../components/groups-select.component';\n\nconst initialValues = {\n  id: '',\n  groups: [],\n};\n\nconst NodeSchema = Yup.object().shape({\n  id: Yup.string().required('Required'),\n  groups: Yup.array(),\n});\n\nexport default function NewNode({ isOpen, groups = [], saveNewNode, cancelNewNode }) {\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>New node</DialogTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={NodeSchema}\n        onSubmit={saveNewNode}\n        render={({ errors, values, setFieldValue }) => (\n          <Form>\n            <DialogContent>\n              <Field type=\"text\" label=\"ID\" name=\"id\" component={TextField} error={!!errors.id} />\n              <GroupsSelect groups={groups} selectedGroups={values.groups} onChange={(selectedGroups) => setFieldValue('groups', selectedGroups)} />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={cancelNewNode} className=\"cancel\" type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Done\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      />\n    </Dialog>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport NewNode from './new-node.component';\nimport { getIsOpen, closeDialog, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { createNode, getGroupsAsArray } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.NEW_NODE),\n    groups: getGroupsAsArray(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    saveNewNode: (node) => {\n      dispatch(createNode(node));\n      dispatch(closeDialog(DIALOG_IDS.NEW_NODE));\n    },\n    cancelNewNode: () => dispatch(closeDialog(DIALOG_IDS.NEW_NODE)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewNode);\n","import React from 'react';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  chip: {\n    margin: `${theme.spacing(0.5)}px ${theme.spacing(0.25)}px`,\n  },\n  chipFocused: {\n    backgroundColor: emphasize(theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700], 0.08),\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 16,\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography color=\"textSecondary\" className={props.selectProps.classes.noOptionsMessage} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps,\n        },\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography color=\"textSecondary\" className={props.selectProps.classes.placeholder} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nfunction SelectSearcher(props) {\n  return (\n    <div className={props.classes.root}>\n      <Select\n        styles={{\n          input: (base) => ({\n            ...base,\n            '& input': {\n              font: 'inherit',\n            },\n          }),\n        }}\n        components={components}\n        textFieldProps={{\n          InputLabelProps: {\n            shrink: true,\n          },\n        }}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(SelectSearcher);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport SelectSearcher from '../../../../../../components/select-searcher.component';\nimport GroupsSelect from '../../components/groups-select.component';\nimport './new-link.component.css';\n\nconst StyledTextField = withStyles({\n  root: {\n    display: 'block !important',\n  },\n})(TextField);\n\nfunction NewLink({ isOpen, nodesIds, groups = [], saveNewLink, cancelNewLink }) {\n  const initialValues = {\n    label: '',\n    source: undefined,\n    target: undefined,\n    groups: [],\n  };\n\n  const LinkSchema = Yup.object().shape({\n    label: Yup.string(),\n    source: Yup.string().required('Required'),\n    target: Yup.string().required('Required'),\n    groups: Yup.array(),\n  });\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>New link</DialogTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={LinkSchema}\n        onSubmit={(values) =>\n          saveNewLink({\n            ...values,\n            label: values.label.trim() !== '' ? values.label : `${values.source}-${values.target}`,\n          })\n        }\n        render={({ errors, setFieldValue, values }) => (\n          <Form>\n            <DialogContent>\n              <Field type=\"text\" label=\"Label\" name=\"label\" component={StyledTextField} error={!!errors.label} />\n              <SelectSearcher\n                options={nodesIds.map((nodeId) => ({ label: nodeId, value: nodeId }))}\n                onChange={({ value }) => setFieldValue('source', value)}\n                label=\"Source\"\n                placeholder=\"Search a node\"\n              />\n              <SelectSearcher\n                options={nodesIds.map((nodeId) => ({ label: nodeId, value: nodeId }))}\n                onChange={({ value }) => setFieldValue('target', value)}\n                label=\"Target\"\n                placeholder=\"Search a node\"\n              />\n              <GroupsSelect groups={groups} selectedGroups={values.groups} onChange={(selectedGroups) => setFieldValue('groups', selectedGroups)} />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={cancelNewLink} className=\"cancel\" type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Done\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      />\n    </Dialog>\n  );\n}\n\nNewLink.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  saveNewLink: PropTypes.func.isRequired,\n  cancelNewLink: PropTypes.func.isRequired,\n  nodesIds: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default NewLink;\n","import { connect } from 'react-redux';\n\nimport NewLink from './new-link.component';\nimport { getIsOpen, closeDialog, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { createLink, getNodesIds, getGroupsAsArray } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.NEW_LINK),\n    nodesIds: getNodesIds(state),\n    groups: getGroupsAsArray(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    saveNewLink: (node) => {\n      dispatch(createLink(node));\n      dispatch(closeDialog(DIALOG_IDS.NEW_LINK));\n    },\n    cancelNewLink: () => dispatch(closeDialog(DIALOG_IDS.NEW_LINK)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewLink);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TwitterPicker } from 'react-color';\n\nimport TextField from '@material-ui/core/TextField';\n\nfunction ToggleColorPicker({ color, colors, onChange }) {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  return (\n    <React.Fragment>\n      <TextField label=\"Color\" value={color} margin=\"normal\" onFocus={() => setDisplayColorPicker(true)} />\n      {displayColorPicker && <TwitterPicker width={170} color={color} onChange={({ hex: color }) => onChange(color)} colors={colors} />}\n    </React.Fragment>\n  );\n}\n\nToggleColorPicker.propTypes = {\n  color: PropTypes.string,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ToggleColorPicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { red, purple, blue, green, yellow, orange, brown, grey } from '@material-ui/core/colors';\n\nimport ToggleColorPicker from '../../../../../../components/toggle-color-picker.component';\nimport GroupsSelect from '../../components/groups-select.component';\n\nconst StyledTextField = styled(TextField)`\n  display: block !important;\n`;\n\nconst colors = [red['A200'], purple['A200'], blue['A200'], green['A200'], yellow['A200'], orange['A200'], brown['500'], grey['500']];\n\nfunction EditNode({ isOpen, node = {}, nodesIds = [], groups = [], editNode, cancelEditNode }) {\n  const nodeGroups = node.groups || [];\n  const oldId = node.id;\n  const initialValues = {\n    id: node.id,\n    color: node.color,\n    groups: groups.filter((group) => !!nodeGroups.find((nodeGroup) => nodeGroup.id === group.id)),\n  };\n\n  const NodeSchema = Yup.object().shape({\n    id: Yup.string()\n      .required('Required')\n      .notOneOf(nodesIds.filter((nodeId) => nodeId !== node.id)),\n    groups: Yup.array(),\n  });\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Edit node {node.id}</DialogTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={NodeSchema}\n        onSubmit={(values) => editNode(oldId, values)}\n        render={({ errors, values, setFieldValue }) => (\n          <Form>\n            <DialogContent>\n              <Field type=\"text\" label=\"ID\" name=\"id\" component={StyledTextField} error={!!errors.id} />\n              <ToggleColorPicker color={values.color} colors={colors} onChange={(color) => setFieldValue('color', color)} />\n              <GroupsSelect groups={groups} selectedGroups={values.groups} onChange={(selectedGroups) => setFieldValue('groups', selectedGroups)} />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={cancelEditNode} className=\"cancel\" type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Done\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      />\n    </Dialog>\n  );\n}\n\nEditNode.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  node: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }),\n  nodesIds: PropTypes.arrayOf(PropTypes.string),\n  editNode: PropTypes.func.isRequired,\n  cancelEditNode: PropTypes.func.isRequired,\n};\n\nexport default EditNode;\n","import { connect } from 'react-redux';\n\nimport EditNode from './edit-node.component';\nimport { getIsOpen, getMetadata, closeDialog, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { editNode, getNodesIds, getGroupsAsArray } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.EDIT_NODE),\n    node: getMetadata(state, DIALOG_IDS.EDIT_NODE),\n    nodesIds: getNodesIds(state),\n    groups: getGroupsAsArray(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    editNode: (oldId, node) => {\n      dispatch(editNode(oldId, node));\n      dispatch(closeDialog(DIALOG_IDS.EDIT_NODE));\n    },\n    cancelEditNode: () => dispatch(closeDialog(DIALOG_IDS.EDIT_NODE)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditNode);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupsSelect from '../../components/groups-select.component';\n\nconst StyledTextField = styled(TextField)`\n  display: block !important;\n`;\n\nfunction EditLink({ isOpen, link = {}, groups = [], editLink, cancelEditLink }) {\n  const linkGroups = link.groups || [];\n  const initialValues = {\n    label: link.label,\n    groups: groups.filter((group) => !!linkGroups.find((linkGroup) => linkGroup.id === group.id)),\n  };\n\n  const LinkSchema = Yup.object().shape({\n    label: Yup.string().required('Required'),\n    groups: Yup.array(),\n  });\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Edit link {link.label}</DialogTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={LinkSchema}\n        onSubmit={(values) => editLink({ ...link, ...values })}\n        render={({ errors, values, setFieldValue }) => (\n          <Form>\n            <DialogContent>\n              <Field type=\"text\" label=\"Label\" name=\"label\" component={StyledTextField} error={!!errors.label} />\n              <GroupsSelect groups={groups} selectedGroups={values.groups} onChange={(selectedGroups) => setFieldValue('groups', selectedGroups)} />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={cancelEditLink} className=\"cancel\" type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Done\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      />\n    </Dialog>\n  );\n}\n\nEditLink.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  link: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }),\n  editLink: PropTypes.func.isRequired,\n  cancelEditLink: PropTypes.func.isRequired,\n};\n\nexport default EditLink;\n","import { connect } from 'react-redux';\n\nimport EditLink from './edit-link.component';\nimport { getIsOpen, getMetadata, closeDialog, DIALOG_IDS } from '../../../../../../ducks/dialog.duck';\nimport { editLink, getGroupsAsArray } from '../../../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.EDIT_LINK),\n    link: getMetadata(state, DIALOG_IDS.EDIT_LINK),\n    groups: getGroupsAsArray(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    editLink: (link) => {\n      dispatch(editLink(link));\n      dispatch(closeDialog(DIALOG_IDS.EDIT_LINK));\n    },\n    cancelEditLink: () => dispatch(closeDialog(DIALOG_IDS.EDIT_LINK)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditLink);\n","import React from 'react';\n\nimport SpeedDials from './speed-dials.container';\nimport NewNode from './scenes/new-node';\nimport NewLink from './scenes/new-link';\nimport EditNode from './scenes/edit-node';\nimport EditLink from './scenes/edit-link';\n\nfunction Actions({ className }) {\n  return (\n    <>\n      <SpeedDials className={className} />\n      <NewNode />\n      <NewLink />\n      <EditNode />\n      <EditLink />\n    </>\n  );\n}\n\nexport default Actions;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  moreButton: {\n    marginRight: -theme.spacing(2),\n  },\n});\n\nfunction ActionsMenu({ graphName, openEditGraph, openConfirmDeleteGraph, openExport, showOnboarding, classes, ...props }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <React.Fragment>\n      <IconButton color=\"inherit\" onClick={handleClick} className={classes.moreButton} {...props}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorEl} open={!!anchorEl} onClose={handleClose}>\n        <MenuItem\n          onClick={() => {\n            openEditGraph();\n            handleClose();\n          }}\n        >\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          Edit\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            openExport();\n            handleClose();\n          }}\n        >\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          Export\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            openConfirmDeleteGraph(graphName);\n            handleClose();\n          }}\n        >\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          Delete\n        </MenuItem>\n\n        <MenuItem\n          onClick={() => {\n            showOnboarding();\n            handleClose();\n          }}\n        >\n          <ListItemIcon>\n            <HelpOutlineIcon />\n          </ListItemIcon>\n          Help\n        </MenuItem>\n      </Menu>\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(ActionsMenu);\n","import { connect } from 'react-redux';\n\nimport ActionsMenu from './actions-menu.component';\nimport { openDialog, DIALOG_IDS } from '../../../ducks/dialog.duck';\nimport { getName } from '../../../ducks/graph';\nimport { showOnboarding } from '../scenes/onboarding/onboarding.duck';\n\nfunction mapStateToProps(state) {\n  return {\n    graphName: getName(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    openConfirmDeleteGraph: (graphName) => dispatch(openDialog(DIALOG_IDS.CONFIRM_DELETE_GRAPH, graphName)),\n    openEditGraph: () => dispatch(openDialog(DIALOG_IDS.EDIT_GRAPH)),\n    openExport: () => dispatch(openDialog(DIALOG_IDS.EXPORT_GRAPH)),\n    showOnboarding: () => dispatch(showOnboarding()),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActionsMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nfunction EditGraph({ isOpen, graphId, graphName, setGraphName, cancelEditGraph }) {\n  const initialValues = {\n    graphName,\n  };\n\n  const GraphSchema = Yup.object().shape({\n    graphName: Yup.string().required('Required'),\n  });\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Edit graph {graphName}</DialogTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={GraphSchema}\n        onSubmit={(values) => setGraphName(graphId, values.graphName)}\n        render={({ errors }) => (\n          <Form>\n            <DialogContent>\n              <Field type=\"text\" label=\"Name\" name=\"graphName\" component={TextField} error={!!errors.name} />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={cancelEditGraph} className=\"cancel\" type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Done\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      />\n    </Dialog>\n  );\n}\n\nEditGraph.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  graphName: PropTypes.string,\n  graphId: PropTypes.string.isRequired,\n  setGraphName: PropTypes.func.isRequired,\n  cancelEditGraph: PropTypes.func.isRequired,\n};\n\nexport default EditGraph;\n","import { connect } from 'react-redux';\n\nimport EditGraph from './edit-graph.component';\nimport { getIsOpen, closeDialog, DIALOG_IDS } from '../../../../ducks/dialog.duck';\nimport { setGraphName, getName, getId } from '../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.EDIT_GRAPH),\n    graphName: getName(state),\n    graphId: getId(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setGraphName: (graphId, graphName) => {\n      dispatch(closeDialog(DIALOG_IDS.EDIT_GRAPH));\n      dispatch(setGraphName(graphId, graphName));\n    },\n    cancelEditGraph: () => dispatch(closeDialog(DIALOG_IDS.EDIT_GRAPH)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditGraph);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nfunction download(fileName, content) {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\n  element.setAttribute('download', fileName);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction DownloadButton({ fileName, content }) {\n  return (\n    <Button onClick={() => download(fileName, content)}>\n      Download\n      <GetAppIcon />\n    </Button>\n  );\n}\n\nDownloadButton.propTypes = {\n  fileName: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default DownloadButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\n\nimport DownloadButton from './components/download-button.component';\n\nfunction Export({ isOpen, graphName, serializedGraph, close }) {\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>Export</DialogTitle>\n      <DialogContent>\n        <AceEditor\n          placeholder=\"\"\n          mode=\"javascript\"\n          theme=\"monokai\"\n          fontSize={14}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={serializedGraph}\n          focus={true}\n          readOnly={true}\n          setOptions={{\n            enableBasicAutocompletion: false,\n            enableLiveAutocompletion: false,\n            enableSnippets: false,\n            showLineNumbers: true,\n            tabSize: 2,\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <DownloadButton fileName={`${graphName}.json`} content={serializedGraph} />\n        <Button color=\"primary\" onClick={close}>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nExport.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  graphName: PropTypes.string.isRequired,\n  serializedGraph: PropTypes.string.isRequired,\n  close: PropTypes.func.isRequired,\n};\n\nexport default Export;\n","import { connect } from 'react-redux';\n\nimport Export from './export.component';\nimport { getIsOpen, closeDialog, DIALOG_IDS } from '../../../../ducks/dialog.duck';\nimport { getSerializedGraph, getName } from '../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    isOpen: getIsOpen(state, DIALOG_IDS.EXPORT_GRAPH),\n    serializedGraph: getSerializedGraph(state),\n    graphName: getName(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    close: () => dispatch(closeDialog(DIALOG_IDS.EXPORT_GRAPH)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Export);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = (theme) => ({\n  figure: {\n    textAlign: 'center',\n    margin: 'auto',\n  },\n  icon: {\n    fontSize: '4rem',\n  },\n  callToAction: {\n    marginTop: theme.spacing(1),\n  },\n});\n\nfunction EmptyState({ classes, addGroup }) {\n  return (\n    <figure className={classes.figure}>\n      <DeviceHubIcon className={classes.icon} />\n      <figcaption>\n        <Typography color=\"textPrimary\">The are no groups</Typography>\n      </figcaption>\n      <Button onClick={addGroup} variant=\"contained\" color=\"primary\" className={classes.callToAction}>\n        Add group\n      </Button>\n    </figure>\n  );\n}\n\nexport default withStyles(styles)(EmptyState);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { red, purple, blue, green, yellow, orange, brown, grey } from '@material-ui/core/colors';\n\nimport ToggleColorPicker from '../../../../../components/toggle-color-picker.component';\n\nconst colors = [red['A700'], purple['A700'], blue['A700'], green['A700'], yellow['A700'], orange['A700'], brown['A700'], grey['A700']];\n\nconst GroupSchema = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  color: Yup.string().required('Required'),\n});\n\nconst classes = {\n  root: {\n    display: 'block',\n  },\n};\n\nconst StyledTextField = withStyles(classes)(TextField);\n\nexport default function GroupEdit({ isOpen, group = {}, save, cancel }) {\n  const initialValues = {\n    name: '',\n    color: colors[0],\n    ...group,\n  };\n\n  const title = !!group.id ? `Edit group ${group.name}` : 'New group';\n\n  return (\n    <Dialog open={isOpen}>\n      <DialogTitle>{title}</DialogTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={GroupSchema}\n        onSubmit={save}\n        render={({ errors, values, setFieldValue }) => (\n          <Form>\n            <DialogContent>\n              <Field type=\"text\" label=\"Name\" name=\"name\" component={StyledTextField} error={!!errors.name} />\n              <ToggleColorPicker color={values.color} colors={colors} onChange={(color) => setFieldValue('color', color)} />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={cancel} className=\"cancel\" type=\"button\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Done\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      />\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    borderRadius: '2px',\n    width: '1rem',\n    height: '1rem',\n  },\n};\n\nfunction ColorBox({ color = '#ccc', classes }) {\n  return <div className={classes.root} style={{ backgroundColor: color }} />;\n}\n\nexport default withStyles(styles)(ColorBox);\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport ColorBox from './color-box.component';\n\nexport default function GroupListItemComponent({ group, onDelete, onEdit }) {\n  return (\n    <ListItem>\n      <ListItemIcon>\n        <ColorBox color={group.color} />\n      </ListItemIcon>\n      <ListItemText primary={group.name} />\n      <ListItemSecondaryAction edge=\"end\">\n        <IconButton onClick={() => onEdit(group)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton onClick={() => onDelete(group.id)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nexport default function AddGroupListItem({ onClick }) {\n  return (\n    <ListItem button onClick={onClick}>\n      <ListItemIcon>\n        <AddCircleOutlineIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Add group\" />\n    </ListItem>\n  );\n}\n","import React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\nexport default function ConfirmDelete({ open = false, groupName, confirm, cancel }) {\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Do you want to delete {groupName}?</DialogTitle>\n      <DialogContent>\n        <DialogContentText>This action cannot be undone.</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={cancel} className=\"cancel\">\n          Cancel\n        </Button>\n        <Button onClick={confirm} color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\n\nimport EmptyState from './components/empty-state.component';\nimport GroupEdit from './components/group-edit.component';\nimport GroupListItem from './components/group-list-item.component';\nimport AddGroupListItem from './components/add-group-list-item.component';\nimport ConfirmDelete from './components/confirm-delete.component';\n\nconst styles = {\n  root: {\n    width: '100%',\n    '&.Mui-expanded': {\n      margin: 0,\n    },\n  },\n  list: {\n    width: '100%',\n  },\n  content: {\n    maxHeight: '30vh',\n    overflow: 'scroll',\n  },\n};\n\nfunction Groups({ groups = [], classes = {}, addGroup, removeGroup, updateGroup }) {\n  const [expanded, setExpanded] = useState(true);\n  const [groupEdit, setGroupEdit] = useState({\n    open: false,\n    group: undefined,\n  });\n  const [confirmDelete, setConfirmDelete] = useState({\n    open: false,\n    group: undefined,\n  });\n\n  const listItems =\n    !!groups.length &&\n    groups.map((group) => (\n      <GroupListItem\n        key={group.id}\n        group={group}\n        onDelete={() =>\n          setConfirmDelete({\n            open: true,\n            group,\n          })\n        }\n        onEdit={() => {\n          setGroupEdit({\n            open: true,\n            group,\n          });\n        }}\n      />\n    ));\n  const list = !!groups.length && (\n    <List className={classes.list}>\n      {listItems}\n      <AddGroupListItem\n        onClick={() =>\n          setGroupEdit({\n            open: true,\n            group: undefined,\n          })\n        }\n      />\n    </List>\n  );\n  const emptyState = !groups.length && (\n    <EmptyState\n      addGroup={() =>\n        setGroupEdit({\n          open: true,\n          group: undefined,\n        })\n      }\n    />\n  );\n\n  return (\n    <>\n      <ExpansionPanel className={classes.root} expanded={expanded} onChange={() => setExpanded(!expanded)}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography color=\"textSecondary\">Groups</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails classes={{ root: classes.content }}>\n          {emptyState}\n          {list}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <GroupEdit\n        isOpen={groupEdit.open}\n        group={groupEdit.group}\n        cancel={() =>\n          setGroupEdit({\n            open: false,\n            group: undefined,\n          })\n        }\n        save={(group) => {\n          if (!group.id) {\n            addGroup(group);\n          } else {\n            updateGroup(group);\n          }\n          setGroupEdit({\n            open: false,\n            group: undefined,\n          });\n        }}\n      />\n      <ConfirmDelete\n        open={confirmDelete.open}\n        groupName={!!confirmDelete.group ? confirmDelete.group.name : ''}\n        cancel={() => setConfirmDelete({ open: false, group: undefined })}\n        confirm={() => {\n          removeGroup(confirmDelete.group.id);\n          setConfirmDelete({ open: false, group: undefined });\n        }}\n      />\n    </>\n  );\n}\n\nexport default withStyles(styles)(Groups);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Groups from './groups.component';\nimport { getGroupsAsArray, addGroup, removeGroup, updateGroup } from '../../../../ducks/graph';\n\nfunction mapStateToProps(state) {\n  return {\n    groups: getGroupsAsArray(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addGroup,\n      removeGroup,\n      updateGroup,\n    },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Groups);\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Field, Form } from 'formik';\nimport { withStyles, fade } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst initialValues = {\n  value: '',\n};\n\nconst styles = (theme) => ({\n  container: {\n    flexGrow: 1,\n  },\n  form: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    '&:hover,&:focus,&:active': {\n      backgroundColor: fade(theme.palette.primary.light, 0.15),\n    },\n  },\n  fieldUnderline: {\n    '&:before,&:after': {\n      borderBottom: 'none !important',\n    },\n  },\n  send: {\n    padding: 0,\n  },\n});\n\nfunction TextEditor({ processSubgraph, importSubgraph, error = false, processing = false, className, classes }) {\n  return (\n    <div className={clsx(classes.container, className)}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar variant=\"dense\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={({ value }, { resetForm, setSubmitting }) => {\n              if (!error) {\n                importSubgraph(value);\n                resetForm(initialValues);\n              }\n              setSubmitting(false);\n            }}\n            render={({ handleChange }) => (\n              <Form className={classes.form}>\n                <Box display=\"flex\">\n                  <Box flexGrow={1}>\n                    <Field\n                      type=\"text\"\n                      name=\"value\"\n                      component={TextField}\n                      InputProps={{\n                        onChange: (event) => {\n                          processSubgraph(event.target.value);\n                          handleChange(event);\n                        },\n                        error,\n                        placeholder: 'Graph path',\n                        margin: 'none',\n                        classes: {\n                          underline: classes.fieldUnderline,\n                        },\n                      }}\n                      margin=\"none\"\n                      fullWidth\n                    />\n                  </Box>\n                  <IconButton type=\"submit\" color=\"primary\" disabled={processing} className={classes.send}>\n                    <SendIcon />\n                  </IconButton>\n                </Box>\n              </Form>\n            )}\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(TextEditor);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { processSubgraph, importSubgraph, getError, getProcessing } from '../../../../ducks/subgraph-creator.duck';\nimport TextEditor from './text-editor.component';\n\nfunction mapStateToProps(state) {\n  return {\n    error: getError(state),\n    processing: getProcessing(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ processSubgraph, importSubgraph }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TextEditor);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from '@material-ui/core';\n\nimport onboardingIntroduction from './assets/onboarding-introduction.png';\n\nconst styles = (theme) => ({\n  img: {\n    maxWidth: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst Introduction = ({ hidden, className, classes }) => (\n  <Box hidden={hidden} className={className}>\n    <p>Grapher is a tool to create graphs. That's it!</p>\n    <p>\n      Start off by adding some nodes and link them to one another. Then, assign groups to them and color each group to reveal patterns in your graph.\n    </p>\n    <img src={onboardingIntroduction} alt=\"Sample graph\" className={classes.img} />\n    <p>Your graphs will be stored in your browser. You can export them to JSON format and then import them in some other browser!</p>\n    <p>\n      Want to learn more? Click the <em>next button</em>.\n    </p>\n  </Box>\n);\n\nexport default withStyles(styles, { withTheme: true })(Introduction);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from '@material-ui/core';\n\nimport image from './assets/onboarding-add-nodes-and-links.png';\n\nconst styles = (theme) => ({\n  img: {\n    maxWidth: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst AddNodesAndLinks = ({ hidden, className, classes }) => (\n  <Box hidden={hidden} className={className}>\n    <p>Add nodes and links from the speed dial on the bottom right corner</p>\n    <Box textAlign=\"center\">\n      <img src={image} alt=\"Sample graph\" className={classes.img} />\n    </Box>\n    <p>Name nodes and assign them a color, if you wish.</p>\n    <p>Then, you can start linking them together by adding links. Which can also be named and colored!</p>\n  </Box>\n);\n\nexport default withStyles(styles, { withTheme: true })(AddNodesAndLinks);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from '@material-ui/core';\n\nimport image from './assets/onboarding-groups.png';\n\nconst styles = (theme) => ({\n  img: {\n    maxWidth: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst Groups = ({ hidden, className, classes }) => (\n  <Box hidden={hidden} className={className}>\n    <p>Assign groups to nodes and links to color them automatically.</p>\n    <p>Reveal hidden patterns in your graph by grouping together nodes and links.</p>\n    <Box textAlign=\"center\">\n      <img src={image} alt=\"Sample graph\" className={classes.img} />\n    </Box>\n    <p>Manage groups from the card at the bottom left corner</p>\n  </Box>\n);\n\nexport default withStyles(styles, { withTheme: true })(Groups);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from '@material-ui/core';\n\nimport image from './assets/onboarding-text-editor.png';\n\nconst styles = (theme) => ({\n  img: {\n    maxWidth: '100%',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n});\n\nconst TextEditor = ({ hidden, className, classes }) => (\n  <Box hidden={hidden} className={className}>\n    <p>\n      Become a power user by creating your graphs <em>writing them down</em>!\n    </p>\n    <p>Use the text editor at the bottom bar to do so.</p>\n    <Box textAlign=\"center\">\n      <img src={image} alt=\"Sample graph\" className={classes.img} />\n    </Box>\n    <p>The syntax is quite simple. Surround your nodes in parentheses and use arrows to link them.</p>\n    <pre>(Frodo)->(Sam)</pre>\n    <p>Name your links too, if you wish.</p>\n    <pre>(Frodo)-[master of]->(Sam)</pre>\n    <p>And assign groups using colons!</p>\n    <pre>(Frodo:Hobbit:Ring bearer)-[master of:social relation]->(Sam)</pre>\n  </Box>\n);\n\nexport default withStyles(styles, { withTheme: true })(TextEditor);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst Title = ({ children, onClose, classes }) => (\n  <DialogTitle disableTypography className={classes.root}>\n    <Typography variant=\"h6\">{children}</Typography>\n    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n      <CloseIcon />\n    </IconButton>\n  </DialogTitle>\n);\n\nexport default withStyles(styles, { withTheme: true })(Title);\n","import React, { useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Introduction from './components/introduction.component';\nimport AddNodesAndLinks from './components/add-nodes-and-links.component';\nimport Groups from './components/groups.component';\nimport TextEditor from './components/text-editor.component';\nimport Title from './components/title.component';\n\nconst styles = (theme) => ({\n  stepper: {\n    width: '40vw',\n    maxWidth: 600,\n    margin: 'auto',\n  },\n  step: {\n    width: '40vw',\n    maxWidth: 600,\n    height: '60vh',\n    maxHeight: 600,\n    overflow: 'scroll',\n    padding: theme.spacing(3),\n  },\n});\n\nconst Onboarding = ({ open, dismiss, classes }) => {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  return (\n    <Dialog open={open}>\n      <Title onClose={dismiss}>Welcome to Grapher!</Title>\n      <Introduction hidden={activeStep !== 0} className={classes.step} />\n      <AddNodesAndLinks hidden={activeStep !== 1} className={classes.step} />\n      <Groups hidden={activeStep !== 2} className={classes.step} />\n      <TextEditor hidden={activeStep !== 3} className={classes.step} />\n      <MobileStepper\n        variant=\"dots\"\n        steps={4}\n        position=\"static\"\n        activeStep={activeStep}\n        className={classes.stepper}\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === 3}>\n            Next\n            <KeyboardArrowRight />\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            <KeyboardArrowLeft />\n            Back\n          </Button>\n        }\n      />\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(Onboarding);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { isOpen, dismissOnboarding } from './onboarding.duck';\nimport Onboarding from './onboarding.component';\n\nconst mapStateToProps = (state) => ({\n  open: isOpen(state),\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      dismiss: dismissOnboarding,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Onboarding);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Box } from '@material-ui/core';\n\nimport ConfirmDeletes from './scenes/confirm-deletes';\nimport SelectedItems from './scenes/selection';\nimport Actions from './scenes/actions';\nimport Navbar from '../../components/navbar';\nimport ActionsMenu from './components/actions-menu.container';\nimport EditGraph from './scenes/edit-graph';\nimport Export from './scenes/export';\nimport Groups from './scenes/groups';\nimport TextEditor from './scenes/text-editor';\nimport Canvas from '../../components/canvas';\nimport Onboarding from './scenes/onboarding';\n\nconst styles = (theme) => ({\n  canvas: {\n    position: 'absolute',\n    top: '64px',\n    left: 0,\n    width: '100%',\n    height: 'calc(100vh - 128px)',\n  },\n  grid: {\n    position: 'absolute',\n    top: '64px',\n    left: 0,\n    width: '100%',\n    height: 'calc(100vh - 128px)',\n    pointerEvents: 'none',\n  },\n  leftPanel: {\n    height: 'calc(100vh - 128px)',\n    padding: theme.spacing(2),\n  },\n  leftPanelContent: {\n    overflow: 'scroll',\n    pointerEvents: 'auto',\n    width: '100%',\n    maxHeight: '100%',\n  },\n  rightPanel: {\n    padding: theme.spacing(2),\n    height: '100%',\n    '& > *': {\n      pointerEvents: 'auto',\n    },\n  },\n  selectedItems: {\n    width: '100%',\n  },\n  textEditor: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n  },\n});\n\nfunction Graph({ graphId, graphName, loadedGraphId, loadGraph, openGraphList, classes }) {\n  if (!!graphId && graphId !== loadedGraphId) {\n    loadGraph(graphId);\n  }\n  return (\n    <>\n      <Navbar title={graphName} onBack={openGraphList}>\n        <ActionsMenu />\n      </Navbar>\n      <ConfirmDeletes />\n      <EditGraph />\n      <Export />\n      <Onboarding />\n      <Canvas className={classes.canvas} />\n      <Grid container classes={{ root: classes.grid }}>\n        <Grid item lg={3} xs={4}>\n          <Box display=\"flex\" alignItems=\"flex-end\" className={classes.leftPanel}>\n            <Box className={classes.leftPanelContent}>\n              <SelectedItems className={classes.selectedItems} />\n              <Groups />\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item lg={8} xs={6} />\n        <Grid item lg={1} xs={2}>\n          <Box display=\"flex\" alignItems=\"flex-end\" justifyContent=\"flex-end\" className={classes.rightPanel}>\n            <Actions />\n          </Box>\n        </Grid>\n      </Grid>\n      <TextEditor className={classes.textEditor} />\n    </>\n  );\n}\n\nGraph.propTypes = {\n  graphId: PropTypes.string,\n  graphName: PropTypes.string,\n  loadedGraphId: PropTypes.string,\n  loadGraph: PropTypes.func,\n  openGraphList: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(Graph);\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport Graph from './graph.component';\nimport { loadGraph, getId, getName } from '../../ducks/graph';\nimport { openGraphList } from '../../ducks/navigation.duck';\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    graphId: ownProps.match.params.graphId,\n    loadedGraphId: getId(state),\n    graphName: getName(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      loadGraph,\n      openGraphList,\n    },\n    dispatch\n  );\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Graph)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddIcon from '@material-ui/icons/Add';\nimport InputIcon from '@material-ui/icons/Input';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nimport Navbar from '../../components/navbar';\n\nfunction GraphList({ graphNames, openNewGraph, openGraph, openImportGraph }) {\n  const listItems = graphNames.map(([graphId, graphName]) => (\n    <ListItem key={graphId} button onClick={() => openGraph(graphId)}>\n      <ListItemText primary={graphName} />\n    </ListItem>\n  ));\n\n  const addGraph = (\n    <ListItem button onClick={openNewGraph} className=\"open-new-graph\">\n      <ListItemAvatar>\n        <Avatar>\n          <AddIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary=\"Create new graph\" />\n    </ListItem>\n  );\n\n  const importGraph = (\n    <ListItem button onClick={openImportGraph} className=\"open-import-graph\">\n      <ListItemAvatar>\n        <Avatar>\n          <InputIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary=\"Import graph\" />\n    </ListItem>\n  );\n\n  return (\n    <>\n      <Navbar title=\"Graph list\" />\n      <Dialog open={true}>\n        <DialogTitle>Select a graph</DialogTitle>\n        <DialogContent>\n          <List>\n            {listItems}\n            {addGraph}\n            {importGraph}\n          </List>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nGraphList.propTypes = {\n  graphNames: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  openNewGraph: PropTypes.func,\n  openGraph: PropTypes.func,\n  openImportGraph: PropTypes.func,\n};\n\nexport default GraphList;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport GraphList from './graph-list.component';\nimport { getGraphNamesAsArray } from './graph-list.duck';\nimport { openImportGraph, openNewGraph, openGraph } from '../../ducks/navigation.duck';\n\nfunction mapStateToProps(state) {\n  return {\n    graphNames: getGraphNamesAsArray(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      openNewGraph,\n      openGraph,\n      openImportGraph,\n    },\n    dispatch\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GraphList);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AceEditor from 'react-ace';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\nimport 'brace/mode/javascript';\nimport 'brace/theme/monokai';\n\nimport './graph-import.component.css';\nimport Navbar from '../../components/navbar';\n\nconst styles = (theme) => {\n  return {\n    listItem: {\n      paddingLeft: 0,\n    },\n    listItemText: {\n      color: `${theme.palette.error.main}`,\n    },\n  };\n};\n\nfunction handleFileUpload(file, setSerializedGraph) {\n  const fileReader = new FileReader();\n  fileReader.onload = (event) => {\n    const serializedGraph = event.target.result;\n    setSerializedGraph(serializedGraph);\n  };\n  fileReader.readAsText(file);\n}\n\nfunction Import({ errors = [], close, importGraph, openGraphList, classes }) {\n  const [serializedGraph, setSerializedGraph] = useState('');\n  const errorsListItems = errors.map((error, index) => (\n    <ListItem key={index} classes={{ root: classes.listItem }}>\n      <ListItemText classes={{ primary: classes.listItemText }} primary={error} />\n    </ListItem>\n  ));\n  return (\n    <>\n      <Navbar title=\"Import\" onBack={openGraphList} />\n      <Dialog open={true}>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            importGraph(serializedGraph);\n          }}\n        >\n          <DialogTitle>Import</DialogTitle>\n          <DialogContent>\n            <List dense={true}>{errorsListItems}</List>\n            <DropzoneArea\n              onChange={(files) => handleFileUpload(files[0], setSerializedGraph)}\n              dropZoneClass=\"dropzone\"\n              dropzoneParagraphClass=\"dropzone__paragraph\"\n              dropzoneText=\"Drag and drop a JSON graph here or click to manually browse for it\"\n              acceptedFiles={['application/json']}\n              filesLimit={1}\n              showPreviewsInDropzone={false}\n              showAlerts={false}\n            />\n            <AceEditor\n              placeholder=\"\"\n              mode=\"javascript\"\n              theme=\"monokai\"\n              fontSize={12}\n              showPrintMargin={false}\n              showGutter={true}\n              highlightActiveLine={true}\n              value={serializedGraph}\n              focus={true}\n              onChange={(value) => setSerializedGraph(value)}\n              setOptions={{\n                showLineNumbers: true,\n                tabSize: 2,\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={close} type=\"button\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Done\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n\nImport.propTypes = {\n  errors: PropTypes.arrayOf(PropTypes.string),\n  importGraph: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  openGraphList: PropTypes.func,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Import);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Import from './graph-import.component';\nimport { importGraph, getErrors } from './graph-import.duck';\nimport { openGraphList } from '../../ducks/navigation.duck';\n\nfunction mapStateToProps(state) {\n  return {\n    errors: getErrors(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    ...bindActionCreators(\n      {\n        importGraph,\n        openGraphList,\n      },\n      dispatch\n    ),\n    close: () => dispatch(openGraphList()),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Import);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport NewGraph from './scenes/new-graph';\nimport Canvas from './components/canvas';\nimport Graph from './scenes/graph';\nimport { ROUTES } from './constants';\nimport GraphList from './scenes/graph-list';\nimport Import from './scenes/graph-import';\n\nexport class App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Route path={[ROUTES.BASE, ROUTES.GRAPHS]} exact render={() => [<GraphList key=\"GraphList\" />, <Canvas key=\"Canvas\" />]} />\n        <Route path={ROUTES.IMPORT_GRAPH} exact render={() => [<Import key=\"Import\" />, <Canvas key=\"Canvas\" />]} />\n        <Route path={ROUTES.NEW_GRAPH} exact render={() => [<NewGraph key=\"NewGraph\" />, <Canvas key=\"Canvas\" />]} />\n        <Route path={ROUTES.GRAPH} exact render={() => <Graph key=\"Graph\" />} />\n      </React.Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { store } from './store';\nimport history from './services/history.service';\nimport { App } from './app.component';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <CssBaseline />\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}